{"ast":null,"code":"import _toConsumableArray from \"E:/Projects/React Projects/local-chat/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _slicedToArray from \"E:/Projects/React Projects/local-chat/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\n\n/**\r\n * React Router DOM v6.15.0\r\n *\r\n * Copyright (c) Remix Software Inc.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE.md file in the root directory of this source tree.\r\n *\r\n * @license MIT\r\n */\nimport * as React from 'react';\nimport { UNSAFE_mapRouteProperties, Router, UNSAFE_NavigationContext, useHref, useResolvedPath, useLocation, UNSAFE_DataRouterStateContext, useNavigate, createPath, UNSAFE_useRouteId, UNSAFE_RouteContext, useMatches, useNavigation, unstable_useBlocker, UNSAFE_DataRouterContext } from 'react-router';\nexport { AbortedDeferredError, Await, MemoryRouter, Navigate, NavigationType, Outlet, Route, Router, RouterProvider, Routes, UNSAFE_DataRouterContext, UNSAFE_DataRouterStateContext, UNSAFE_LocationContext, UNSAFE_NavigationContext, UNSAFE_RouteContext, UNSAFE_useRouteId, createMemoryRouter, createPath, createRoutesFromChildren, createRoutesFromElements, defer, generatePath, isRouteErrorResponse, json, matchPath, matchRoutes, parsePath, redirect, redirectDocument, renderMatches, resolvePath, unstable_useBlocker, useActionData, useAsyncError, useAsyncValue, useHref, useInRouterContext, useLoaderData, useLocation, useMatch, useMatches, useNavigate, useNavigation, useNavigationType, useOutlet, useOutletContext, useParams, useResolvedPath, useRevalidator, useRouteError, useRouteLoaderData, useRoutes } from 'react-router';\nimport { stripBasename, UNSAFE_warning, createRouter, createBrowserHistory, createHashHistory, ErrorResponse, UNSAFE_invariant, joinPaths } from '@remix-run/router';\n\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nvar defaultMethod = \"get\";\nvar defaultEncType = \"application/x-www-form-urlencoded\";\n\nfunction isHtmlElement(object) {\n  return object != null && typeof object.tagName === \"string\";\n}\n\nfunction isButtonElement(object) {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"button\";\n}\n\nfunction isFormElement(object) {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"form\";\n}\n\nfunction isInputElement(object) {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"input\";\n}\n\nfunction isModifiedEvent(event) {\n  return !!(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey);\n}\n\nfunction shouldProcessLinkClick(event, target) {\n  return event.button === 0 && ( // Ignore everything but left clicks\n  !target || target === \"_self\") && // Let browser handle \"target=_blank\" etc.\n  !isModifiedEvent(event) // Ignore clicks with modifier keys\n  ;\n}\n/**\r\n * Creates a URLSearchParams object using the given initializer.\r\n *\r\n * This is identical to `new URLSearchParams(init)` except it also\r\n * supports arrays as values in the object form of the initializer\r\n * instead of just strings. This is convenient when you need multiple\r\n * values for a given key, but don't want to use an array initializer.\r\n *\r\n * For example, instead of:\r\n *\r\n *   let searchParams = new URLSearchParams([\r\n *     ['sort', 'name'],\r\n *     ['sort', 'price']\r\n *   ]);\r\n *\r\n * you can do:\r\n *\r\n *   let searchParams = createSearchParams({\r\n *     sort: ['name', 'price']\r\n *   });\r\n */\n\n\nfunction createSearchParams(init) {\n  if (init === void 0) {\n    init = \"\";\n  }\n\n  return new URLSearchParams(typeof init === \"string\" || Array.isArray(init) || init instanceof URLSearchParams ? init : Object.keys(init).reduce(function (memo, key) {\n    var value = init[key];\n    return memo.concat(Array.isArray(value) ? value.map(function (v) {\n      return [key, v];\n    }) : [[key, value]]);\n  }, []));\n}\n\nfunction getSearchParamsForLocation(locationSearch, defaultSearchParams) {\n  var searchParams = createSearchParams(locationSearch);\n\n  if (defaultSearchParams) {\n    // Use `defaultSearchParams.forEach(...)` here instead of iterating of\n    // `defaultSearchParams.keys()` to work-around a bug in Firefox related to\n    // web extensions. Relevant Bugzilla tickets:\n    // https://bugzilla.mozilla.org/show_bug.cgi?id=1414602\n    // https://bugzilla.mozilla.org/show_bug.cgi?id=1023984\n    defaultSearchParams.forEach(function (_, key) {\n      if (!searchParams.has(key)) {\n        defaultSearchParams.getAll(key).forEach(function (value) {\n          searchParams.append(key, value);\n        });\n      }\n    });\n  }\n\n  return searchParams;\n} // One-time check for submitter support\n\n\nvar _formDataSupportsSubmitter = null;\n\nfunction isFormDataSubmitterSupported() {\n  if (_formDataSupportsSubmitter === null) {\n    try {\n      new FormData(document.createElement(\"form\"), // @ts-expect-error if FormData supports the submitter parameter, this will throw\n      0);\n      _formDataSupportsSubmitter = false;\n    } catch (e) {\n      _formDataSupportsSubmitter = true;\n    }\n  }\n\n  return _formDataSupportsSubmitter;\n}\n\nvar supportedFormEncTypes = new Set([\"application/x-www-form-urlencoded\", \"multipart/form-data\", \"text/plain\"]);\n\nfunction getFormEncType(encType) {\n  if (encType != null && !supportedFormEncTypes.has(encType)) {\n    process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(false, \"\\\"\" + encType + \"\\\" is not a valid `encType` for `<Form>`/`<fetcher.Form>` \" + (\"and will default to \\\"\" + defaultEncType + \"\\\"\")) : void 0;\n    return null;\n  }\n\n  return encType;\n}\n\nfunction getFormSubmissionInfo(target, basename) {\n  var method;\n  var action;\n  var encType;\n  var formData;\n  var body;\n\n  if (isFormElement(target)) {\n    // When grabbing the action from the element, it will have had the basename\n    // prefixed to ensure non-JS scenarios work, so strip it since we'll\n    // re-prefix in the router\n    var attr = target.getAttribute(\"action\");\n    action = attr ? stripBasename(attr, basename) : null;\n    method = target.getAttribute(\"method\") || defaultMethod;\n    encType = getFormEncType(target.getAttribute(\"enctype\")) || defaultEncType;\n    formData = new FormData(target);\n  } else if (isButtonElement(target) || isInputElement(target) && (target.type === \"submit\" || target.type === \"image\")) {\n    var form = target.form;\n\n    if (form == null) {\n      throw new Error(\"Cannot submit a <button> or <input type=\\\"submit\\\"> without a <form>\");\n    } // <button>/<input type=\"submit\"> may override attributes of <form>\n    // When grabbing the action from the element, it will have had the basename\n    // prefixed to ensure non-JS scenarios work, so strip it since we'll\n    // re-prefix in the router\n\n\n    var _attr = target.getAttribute(\"formaction\") || form.getAttribute(\"action\");\n\n    action = _attr ? stripBasename(_attr, basename) : null;\n    method = target.getAttribute(\"formmethod\") || form.getAttribute(\"method\") || defaultMethod;\n    encType = getFormEncType(target.getAttribute(\"formenctype\")) || getFormEncType(form.getAttribute(\"enctype\")) || defaultEncType; // Build a FormData object populated from a form and submitter\n\n    formData = new FormData(form, target); // If this browser doesn't support the `FormData(el, submitter)` format,\n    // then tack on the submitter value at the end.  This is a lightweight\n    // solution that is not 100% spec compliant.  For complete support in older\n    // browsers, consider using the `formdata-submitter-polyfill` package\n\n    if (!isFormDataSubmitterSupported()) {\n      var name = target.name,\n          type = target.type,\n          value = target.value;\n\n      if (type === \"image\") {\n        var prefix = name ? name + \".\" : \"\";\n        formData.append(prefix + \"x\", \"0\");\n        formData.append(prefix + \"y\", \"0\");\n      } else if (name) {\n        formData.append(name, value);\n      }\n    }\n  } else if (isHtmlElement(target)) {\n    throw new Error(\"Cannot submit element that is not <form>, <button>, or \" + \"<input type=\\\"submit|image\\\">\");\n  } else {\n    method = defaultMethod;\n    action = null;\n    encType = defaultEncType;\n    body = target;\n  } // Send body for <Form encType=\"text/plain\" so we encode it into text\n\n\n  if (formData && encType === \"text/plain\") {\n    body = formData;\n    formData = undefined;\n  }\n\n  return {\n    action: action,\n    method: method.toLowerCase(),\n    encType: encType,\n    formData: formData,\n    body: body\n  };\n}\n\nvar _excluded = [\"onClick\", \"relative\", \"reloadDocument\", \"replace\", \"state\", \"target\", \"to\", \"preventScrollReset\"],\n    _excluded2 = [\"aria-current\", \"caseSensitive\", \"className\", \"end\", \"style\", \"to\", \"children\"],\n    _excluded3 = [\"reloadDocument\", \"replace\", \"state\", \"method\", \"action\", \"onSubmit\", \"submit\", \"relative\", \"preventScrollReset\"];\n\nfunction createBrowserRouter(routes, opts) {\n  return createRouter({\n    basename: opts == null ? void 0 : opts.basename,\n    future: _extends({}, opts == null ? void 0 : opts.future, {\n      v7_prependBasename: true\n    }),\n    history: createBrowserHistory({\n      window: opts == null ? void 0 : opts.window\n    }),\n    hydrationData: (opts == null ? void 0 : opts.hydrationData) || parseHydrationData(),\n    routes: routes,\n    mapRouteProperties: UNSAFE_mapRouteProperties\n  }).initialize();\n}\n\nfunction createHashRouter(routes, opts) {\n  return createRouter({\n    basename: opts == null ? void 0 : opts.basename,\n    future: _extends({}, opts == null ? void 0 : opts.future, {\n      v7_prependBasename: true\n    }),\n    history: createHashHistory({\n      window: opts == null ? void 0 : opts.window\n    }),\n    hydrationData: (opts == null ? void 0 : opts.hydrationData) || parseHydrationData(),\n    routes: routes,\n    mapRouteProperties: UNSAFE_mapRouteProperties\n  }).initialize();\n}\n\nfunction parseHydrationData() {\n  var _window;\n\n  var state = (_window = window) == null ? void 0 : _window.__staticRouterHydrationData;\n\n  if (state && state.errors) {\n    state = _extends({}, state, {\n      errors: deserializeErrors(state.errors)\n    });\n  }\n\n  return state;\n}\n\nfunction deserializeErrors(errors) {\n  if (!errors) return null;\n  var entries = Object.entries(errors);\n  var serialized = {};\n\n  for (var _i = 0, _entries = entries; _i < _entries.length; _i++) {\n    var _entries$_i = _slicedToArray(_entries[_i], 2),\n        key = _entries$_i[0],\n        val = _entries$_i[1];\n\n    // Hey you!  If you change this, please change the corresponding logic in\n    // serializeErrors in react-router-dom/server.tsx :)\n    if (val && val.__type === \"RouteErrorResponse\") {\n      serialized[key] = new ErrorResponse(val.status, val.statusText, val.data, val.internal === true);\n    } else if (val && val.__type === \"Error\") {\n      // Attempt to reconstruct the right type of Error (i.e., ReferenceError)\n      if (val.__subType) {\n        var ErrorConstructor = window[val.__subType];\n\n        if (typeof ErrorConstructor === \"function\") {\n          try {\n            // @ts-expect-error\n            var error = new ErrorConstructor(val.message); // Wipe away the client-side stack trace.  Nothing to fill it in with\n            // because we don't serialize SSR stack traces for security reasons\n\n            error.stack = \"\";\n            serialized[key] = error;\n          } catch (e) {// no-op - fall through and create a normal Error\n          }\n        }\n      }\n\n      if (serialized[key] == null) {\n        var _error = new Error(val.message); // Wipe away the client-side stack trace.  Nothing to fill it in with\n        // because we don't serialize SSR stack traces for security reasons\n\n\n        _error.stack = \"\";\n        serialized[key] = _error;\n      }\n    } else {\n      serialized[key] = val;\n    }\n  }\n\n  return serialized;\n} //#endregion\n////////////////////////////////////////////////////////////////////////////////\n//#region Components\n////////////////////////////////////////////////////////////////////////////////\n\n/**\r\n  Webpack + React 17 fails to compile on any of the following because webpack\r\n  complains that `startTransition` doesn't exist in `React`:\r\n  * import { startTransition } from \"react\"\r\n  * import * as React from from \"react\";\r\n    \"startTransition\" in React ? React.startTransition(() => setState()) : setState()\r\n  * import * as React from from \"react\";\r\n    \"startTransition\" in React ? React[\"startTransition\"](() => setState()) : setState()\r\n\r\n  Moving it to a constant such as the following solves the Webpack/React 17 issue:\r\n  * import * as React from from \"react\";\r\n    const START_TRANSITION = \"startTransition\";\r\n    START_TRANSITION in React ? React[START_TRANSITION](() => setState()) : setState()\r\n\r\n  However, that introduces webpack/terser minification issues in production builds\r\n  in React 18 where minification/obfuscation ends up removing the call of\r\n  React.startTransition entirely from the first half of the ternary.  Grabbing\r\n  this exported reference once up front resolves that issue.\r\n\r\n  See https://github.com/remix-run/react-router/issues/10579\r\n*/\n\n\nvar START_TRANSITION = \"startTransition\";\nvar startTransitionImpl = React[START_TRANSITION];\n/**\r\n * A `<Router>` for use in web browsers. Provides the cleanest URLs.\r\n */\n\nfunction BrowserRouter(_ref) {\n  var basename = _ref.basename,\n      children = _ref.children,\n      future = _ref.future,\n      window = _ref.window;\n  var historyRef = React.useRef();\n\n  if (historyRef.current == null) {\n    historyRef.current = createBrowserHistory({\n      window: window,\n      v5Compat: true\n    });\n  }\n\n  var history = historyRef.current;\n\n  var _React$useState = React.useState({\n    action: history.action,\n    location: history.location\n  }),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      state = _React$useState2[0],\n      setStateImpl = _React$useState2[1];\n\n  var _ref9 = future || {},\n      v7_startTransition = _ref9.v7_startTransition;\n\n  var setState = React.useCallback(function (newState) {\n    v7_startTransition && startTransitionImpl ? startTransitionImpl(function () {\n      return setStateImpl(newState);\n    }) : setStateImpl(newState);\n  }, [setStateImpl, v7_startTransition]);\n  React.useLayoutEffect(function () {\n    return history.listen(setState);\n  }, [history, setState]);\n  return /*#__PURE__*/React.createElement(Router, {\n    basename: basename,\n    children: children,\n    location: state.location,\n    navigationType: state.action,\n    navigator: history\n  });\n}\n/**\r\n * A `<Router>` for use in web browsers. Stores the location in the hash\r\n * portion of the URL so it is not sent to the server.\r\n */\n\n\nfunction HashRouter(_ref2) {\n  var basename = _ref2.basename,\n      children = _ref2.children,\n      future = _ref2.future,\n      window = _ref2.window;\n  var historyRef = React.useRef();\n\n  if (historyRef.current == null) {\n    historyRef.current = createHashHistory({\n      window: window,\n      v5Compat: true\n    });\n  }\n\n  var history = historyRef.current;\n\n  var _React$useState3 = React.useState({\n    action: history.action,\n    location: history.location\n  }),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      state = _React$useState4[0],\n      setStateImpl = _React$useState4[1];\n\n  var _ref10 = future || {},\n      v7_startTransition = _ref10.v7_startTransition;\n\n  var setState = React.useCallback(function (newState) {\n    v7_startTransition && startTransitionImpl ? startTransitionImpl(function () {\n      return setStateImpl(newState);\n    }) : setStateImpl(newState);\n  }, [setStateImpl, v7_startTransition]);\n  React.useLayoutEffect(function () {\n    return history.listen(setState);\n  }, [history, setState]);\n  return /*#__PURE__*/React.createElement(Router, {\n    basename: basename,\n    children: children,\n    location: state.location,\n    navigationType: state.action,\n    navigator: history\n  });\n}\n/**\r\n * A `<Router>` that accepts a pre-instantiated history object. It's important\r\n * to note that using your own history object is highly discouraged and may add\r\n * two versions of the history library to your bundles unless you use the same\r\n * version of the history library that React Router uses internally.\r\n */\n\n\nfunction HistoryRouter(_ref3) {\n  var basename = _ref3.basename,\n      children = _ref3.children,\n      future = _ref3.future,\n      history = _ref3.history;\n\n  var _React$useState5 = React.useState({\n    action: history.action,\n    location: history.location\n  }),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      state = _React$useState6[0],\n      setStateImpl = _React$useState6[1];\n\n  var _ref11 = future || {},\n      v7_startTransition = _ref11.v7_startTransition;\n\n  var setState = React.useCallback(function (newState) {\n    v7_startTransition && startTransitionImpl ? startTransitionImpl(function () {\n      return setStateImpl(newState);\n    }) : setStateImpl(newState);\n  }, [setStateImpl, v7_startTransition]);\n  React.useLayoutEffect(function () {\n    return history.listen(setState);\n  }, [history, setState]);\n  return /*#__PURE__*/React.createElement(Router, {\n    basename: basename,\n    children: children,\n    location: state.location,\n    navigationType: state.action,\n    navigator: history\n  });\n}\n\nif (process.env.NODE_ENV !== \"production\") {\n  HistoryRouter.displayName = \"unstable_HistoryRouter\";\n}\n\nvar isBrowser = typeof window !== \"undefined\" && typeof window.document !== \"undefined\" && typeof window.document.createElement !== \"undefined\";\nvar ABSOLUTE_URL_REGEX = /^(?:[a-z][a-z0-9+.-]*:|\\/\\/)/i;\n/**\r\n * The public API for rendering a history-aware <a>.\r\n */\n\nvar Link = /*#__PURE__*/React.forwardRef(function LinkWithRef(_ref4, ref) {\n  var onClick = _ref4.onClick,\n      relative = _ref4.relative,\n      reloadDocument = _ref4.reloadDocument,\n      replace = _ref4.replace,\n      state = _ref4.state,\n      target = _ref4.target,\n      to = _ref4.to,\n      preventScrollReset = _ref4.preventScrollReset,\n      rest = _objectWithoutPropertiesLoose(_ref4, _excluded);\n\n  var _React$useContext = React.useContext(UNSAFE_NavigationContext),\n      basename = _React$useContext.basename; // Rendered into <a href> for absolute URLs\n\n\n  var absoluteHref;\n  var isExternal = false;\n\n  if (typeof to === \"string\" && ABSOLUTE_URL_REGEX.test(to)) {\n    // Render the absolute href server- and client-side\n    absoluteHref = to; // Only check for external origins client-side\n\n    if (isBrowser) {\n      try {\n        var currentUrl = new URL(window.location.href);\n        var targetUrl = to.startsWith(\"//\") ? new URL(currentUrl.protocol + to) : new URL(to);\n        var path = stripBasename(targetUrl.pathname, basename);\n\n        if (targetUrl.origin === currentUrl.origin && path != null) {\n          // Strip the protocol/origin/basename for same-origin absolute URLs\n          to = path + targetUrl.search + targetUrl.hash;\n        } else {\n          isExternal = true;\n        }\n      } catch (e) {\n        // We can't do external URL detection without a valid URL\n        process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(false, \"<Link to=\\\"\" + to + \"\\\"> contains an invalid URL which will probably break \" + \"when clicked - please update to a valid URL path.\") : void 0;\n      }\n    }\n  } // Rendered into <a href> for relative URLs\n\n\n  var href = useHref(to, {\n    relative: relative\n  });\n  var internalOnClick = useLinkClickHandler(to, {\n    replace: replace,\n    state: state,\n    target: target,\n    preventScrollReset: preventScrollReset,\n    relative: relative\n  });\n\n  function handleClick(event) {\n    if (onClick) onClick(event);\n\n    if (!event.defaultPrevented) {\n      internalOnClick(event);\n    }\n  }\n\n  return (\n    /*#__PURE__*/\n    // eslint-disable-next-line jsx-a11y/anchor-has-content\n    React.createElement(\"a\", _extends({}, rest, {\n      href: absoluteHref || href,\n      onClick: isExternal || reloadDocument ? onClick : handleClick,\n      ref: ref,\n      target: target\n    }))\n  );\n});\n\nif (process.env.NODE_ENV !== \"production\") {\n  Link.displayName = \"Link\";\n}\n/**\r\n * A <Link> wrapper that knows if it's \"active\" or not.\r\n */\n\n\nvar NavLink = /*#__PURE__*/React.forwardRef(function NavLinkWithRef(_ref5, ref) {\n  var _ref5$ariaCurrent = _ref5[\"aria-current\"],\n      ariaCurrentProp = _ref5$ariaCurrent === void 0 ? \"page\" : _ref5$ariaCurrent,\n      _ref5$caseSensitive = _ref5.caseSensitive,\n      caseSensitive = _ref5$caseSensitive === void 0 ? false : _ref5$caseSensitive,\n      _ref5$className = _ref5.className,\n      classNameProp = _ref5$className === void 0 ? \"\" : _ref5$className,\n      _ref5$end = _ref5.end,\n      end = _ref5$end === void 0 ? false : _ref5$end,\n      styleProp = _ref5.style,\n      to = _ref5.to,\n      children = _ref5.children,\n      rest = _objectWithoutPropertiesLoose(_ref5, _excluded2);\n\n  var path = useResolvedPath(to, {\n    relative: rest.relative\n  });\n  var location = useLocation();\n  var routerState = React.useContext(UNSAFE_DataRouterStateContext);\n\n  var _React$useContext2 = React.useContext(UNSAFE_NavigationContext),\n      navigator = _React$useContext2.navigator;\n\n  var toPathname = navigator.encodeLocation ? navigator.encodeLocation(path).pathname : path.pathname;\n  var locationPathname = location.pathname;\n  var nextLocationPathname = routerState && routerState.navigation && routerState.navigation.location ? routerState.navigation.location.pathname : null;\n\n  if (!caseSensitive) {\n    locationPathname = locationPathname.toLowerCase();\n    nextLocationPathname = nextLocationPathname ? nextLocationPathname.toLowerCase() : null;\n    toPathname = toPathname.toLowerCase();\n  }\n\n  var isActive = locationPathname === toPathname || !end && locationPathname.startsWith(toPathname) && locationPathname.charAt(toPathname.length) === \"/\";\n  var isPending = nextLocationPathname != null && (nextLocationPathname === toPathname || !end && nextLocationPathname.startsWith(toPathname) && nextLocationPathname.charAt(toPathname.length) === \"/\");\n  var ariaCurrent = isActive ? ariaCurrentProp : undefined;\n  var className;\n\n  if (typeof classNameProp === \"function\") {\n    className = classNameProp({\n      isActive: isActive,\n      isPending: isPending\n    });\n  } else {\n    // If the className prop is not a function, we use a default `active`\n    // class for <NavLink />s that are active. In v5 `active` was the default\n    // value for `activeClassName`, but we are removing that API and can still\n    // use the old default behavior for a cleaner upgrade path and keep the\n    // simple styling rules working as they currently do.\n    className = [classNameProp, isActive ? \"active\" : null, isPending ? \"pending\" : null].filter(Boolean).join(\" \");\n  }\n\n  var style = typeof styleProp === \"function\" ? styleProp({\n    isActive: isActive,\n    isPending: isPending\n  }) : styleProp;\n  return /*#__PURE__*/React.createElement(Link, _extends({}, rest, {\n    \"aria-current\": ariaCurrent,\n    className: className,\n    ref: ref,\n    style: style,\n    to: to\n  }), typeof children === \"function\" ? children({\n    isActive: isActive,\n    isPending: isPending\n  }) : children);\n});\n\nif (process.env.NODE_ENV !== \"production\") {\n  NavLink.displayName = \"NavLink\";\n}\n/**\r\n * A `@remix-run/router`-aware `<form>`. It behaves like a normal form except\r\n * that the interaction with the server is with `fetch` instead of new document\r\n * requests, allowing components to add nicer UX to the page as the form is\r\n * submitted and returns with data.\r\n */\n\n\nvar Form = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var submit = useSubmit();\n  return /*#__PURE__*/React.createElement(FormImpl, _extends({}, props, {\n    submit: submit,\n    ref: ref\n  }));\n});\n\nif (process.env.NODE_ENV !== \"production\") {\n  Form.displayName = \"Form\";\n}\n\nvar FormImpl = /*#__PURE__*/React.forwardRef(function (_ref6, forwardedRef) {\n  var reloadDocument = _ref6.reloadDocument,\n      replace = _ref6.replace,\n      state = _ref6.state,\n      _ref6$method = _ref6.method,\n      method = _ref6$method === void 0 ? defaultMethod : _ref6$method,\n      action = _ref6.action,\n      onSubmit = _ref6.onSubmit,\n      submit = _ref6.submit,\n      relative = _ref6.relative,\n      preventScrollReset = _ref6.preventScrollReset,\n      props = _objectWithoutPropertiesLoose(_ref6, _excluded3);\n\n  var formMethod = method.toLowerCase() === \"get\" ? \"get\" : \"post\";\n  var formAction = useFormAction(action, {\n    relative: relative\n  });\n\n  var submitHandler = function submitHandler(event) {\n    onSubmit && onSubmit(event);\n    if (event.defaultPrevented) return;\n    event.preventDefault();\n    var submitter = event.nativeEvent.submitter;\n    var submitMethod = (submitter == null ? void 0 : submitter.getAttribute(\"formmethod\")) || method;\n    submit(submitter || event.currentTarget, {\n      method: submitMethod,\n      replace: replace,\n      state: state,\n      relative: relative,\n      preventScrollReset: preventScrollReset\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"form\", _extends({\n    ref: forwardedRef,\n    method: formMethod,\n    action: formAction,\n    onSubmit: reloadDocument ? onSubmit : submitHandler\n  }, props));\n});\n\nif (process.env.NODE_ENV !== \"production\") {\n  FormImpl.displayName = \"FormImpl\";\n}\n/**\r\n * This component will emulate the browser's scroll restoration on location\r\n * changes.\r\n */\n\n\nfunction ScrollRestoration(_ref7) {\n  var getKey = _ref7.getKey,\n      storageKey = _ref7.storageKey;\n  useScrollRestoration({\n    getKey: getKey,\n    storageKey: storageKey\n  });\n  return null;\n}\n\nif (process.env.NODE_ENV !== \"production\") {\n  ScrollRestoration.displayName = \"ScrollRestoration\";\n} //#endregion\n////////////////////////////////////////////////////////////////////////////////\n//#region Hooks\n////////////////////////////////////////////////////////////////////////////////\n\n\nvar DataRouterHook;\n\n(function (DataRouterHook) {\n  DataRouterHook[\"UseScrollRestoration\"] = \"useScrollRestoration\";\n  DataRouterHook[\"UseSubmit\"] = \"useSubmit\";\n  DataRouterHook[\"UseSubmitFetcher\"] = \"useSubmitFetcher\";\n  DataRouterHook[\"UseFetcher\"] = \"useFetcher\";\n})(DataRouterHook || (DataRouterHook = {}));\n\nvar DataRouterStateHook;\n\n(function (DataRouterStateHook) {\n  DataRouterStateHook[\"UseFetchers\"] = \"useFetchers\";\n  DataRouterStateHook[\"UseScrollRestoration\"] = \"useScrollRestoration\";\n})(DataRouterStateHook || (DataRouterStateHook = {}));\n\nfunction getDataRouterConsoleError(hookName) {\n  return hookName + \" must be used within a data router.  See https://reactrouter.com/routers/picking-a-router.\";\n}\n\nfunction useDataRouterContext(hookName) {\n  var ctx = React.useContext(UNSAFE_DataRouterContext);\n  !ctx ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, getDataRouterConsoleError(hookName)) : UNSAFE_invariant(false) : void 0;\n  return ctx;\n}\n\nfunction useDataRouterState(hookName) {\n  var state = React.useContext(UNSAFE_DataRouterStateContext);\n  !state ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, getDataRouterConsoleError(hookName)) : UNSAFE_invariant(false) : void 0;\n  return state;\n}\n/**\r\n * Handles the click behavior for router `<Link>` components. This is useful if\r\n * you need to create custom `<Link>` components with the same click behavior we\r\n * use in our exported `<Link>`.\r\n */\n\n\nfunction useLinkClickHandler(to, _temp) {\n  var _ref12 = _temp === void 0 ? {} : _temp,\n      target = _ref12.target,\n      replaceProp = _ref12.replace,\n      state = _ref12.state,\n      preventScrollReset = _ref12.preventScrollReset,\n      relative = _ref12.relative;\n\n  var navigate = useNavigate();\n  var location = useLocation();\n  var path = useResolvedPath(to, {\n    relative: relative\n  });\n  return React.useCallback(function (event) {\n    if (shouldProcessLinkClick(event, target)) {\n      event.preventDefault(); // If the URL hasn't changed, a regular <a> will do a replace instead of\n      // a push, so do the same here unless the replace prop is explicitly set\n\n      var replace = replaceProp !== undefined ? replaceProp : createPath(location) === createPath(path);\n      navigate(to, {\n        replace: replace,\n        state: state,\n        preventScrollReset: preventScrollReset,\n        relative: relative\n      });\n    }\n  }, [location, navigate, path, replaceProp, state, target, to, preventScrollReset, relative]);\n}\n/**\r\n * A convenient wrapper for reading and writing search parameters via the\r\n * URLSearchParams interface.\r\n */\n\n\nfunction useSearchParams(defaultInit) {\n  process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(typeof URLSearchParams !== \"undefined\", \"You cannot use the `useSearchParams` hook in a browser that does not \" + \"support the URLSearchParams API. If you need to support Internet \" + \"Explorer 11, we recommend you load a polyfill such as \" + \"https://github.com/ungap/url-search-params\\n\\n\" + \"If you're unsure how to load polyfills, we recommend you check out \" + \"https://polyfill.io/v3/ which provides some recommendations about how \" + \"to load polyfills only for users that need them, instead of for every \" + \"user.\") : void 0;\n  var defaultSearchParamsRef = React.useRef(createSearchParams(defaultInit));\n  var hasSetSearchParamsRef = React.useRef(false);\n  var location = useLocation();\n  var searchParams = React.useMemo(function () {\n    return (// Only merge in the defaults if we haven't yet called setSearchParams.\n      // Once we call that we want those to take precedence, otherwise you can't\n      // remove a param with setSearchParams({}) if it has an initial value\n      getSearchParamsForLocation(location.search, hasSetSearchParamsRef.current ? null : defaultSearchParamsRef.current)\n    );\n  }, [location.search]);\n  var navigate = useNavigate();\n  var setSearchParams = React.useCallback(function (nextInit, navigateOptions) {\n    var newSearchParams = createSearchParams(typeof nextInit === \"function\" ? nextInit(searchParams) : nextInit);\n    hasSetSearchParamsRef.current = true;\n    navigate(\"?\" + newSearchParams, navigateOptions);\n  }, [navigate, searchParams]);\n  return [searchParams, setSearchParams];\n}\n\nfunction validateClientSideSubmission() {\n  if (typeof document === \"undefined\") {\n    throw new Error(\"You are calling submit during the server render. \" + \"Try calling submit within a `useEffect` or callback instead.\");\n  }\n}\n/**\r\n * Returns a function that may be used to programmatically submit a form (or\r\n * some arbitrary data) to the server.\r\n */\n\n\nfunction useSubmit() {\n  var _useDataRouterContext = useDataRouterContext(DataRouterHook.UseSubmit),\n      router = _useDataRouterContext.router;\n\n  var _React$useContext3 = React.useContext(UNSAFE_NavigationContext),\n      basename = _React$useContext3.basename;\n\n  var currentRouteId = UNSAFE_useRouteId();\n  return React.useCallback(function (target, options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    validateClientSideSubmission();\n\n    var _getFormSubmissionInf = getFormSubmissionInfo(target, basename),\n        action = _getFormSubmissionInf.action,\n        method = _getFormSubmissionInf.method,\n        encType = _getFormSubmissionInf.encType,\n        formData = _getFormSubmissionInf.formData,\n        body = _getFormSubmissionInf.body;\n\n    router.navigate(options.action || action, {\n      preventScrollReset: options.preventScrollReset,\n      formData: formData,\n      body: body,\n      formMethod: options.method || method,\n      formEncType: options.encType || encType,\n      replace: options.replace,\n      state: options.state,\n      fromRouteId: currentRouteId\n    });\n  }, [router, basename, currentRouteId]);\n}\n/**\r\n * Returns the implementation for fetcher.submit\r\n */\n\n\nfunction useSubmitFetcher(fetcherKey, fetcherRouteId) {\n  var _useDataRouterContext2 = useDataRouterContext(DataRouterHook.UseSubmitFetcher),\n      router = _useDataRouterContext2.router;\n\n  var _React$useContext4 = React.useContext(UNSAFE_NavigationContext),\n      basename = _React$useContext4.basename;\n\n  return React.useCallback(function (target, options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    validateClientSideSubmission();\n\n    var _getFormSubmissionInf2 = getFormSubmissionInfo(target, basename),\n        action = _getFormSubmissionInf2.action,\n        method = _getFormSubmissionInf2.method,\n        encType = _getFormSubmissionInf2.encType,\n        formData = _getFormSubmissionInf2.formData,\n        body = _getFormSubmissionInf2.body;\n\n    !(fetcherRouteId != null) ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"No routeId available for useFetcher()\") : UNSAFE_invariant(false) : void 0;\n    router.fetch(fetcherKey, fetcherRouteId, options.action || action, {\n      preventScrollReset: options.preventScrollReset,\n      formData: formData,\n      body: body,\n      formMethod: options.method || method,\n      formEncType: options.encType || encType\n    });\n  }, [router, basename, fetcherKey, fetcherRouteId]);\n} // v7: Eventually we should deprecate this entirely in favor of using the\n// router method directly?\n\n\nfunction useFormAction(action, _temp2) {\n  var _ref13 = _temp2 === void 0 ? {} : _temp2,\n      relative = _ref13.relative;\n\n  var _React$useContext5 = React.useContext(UNSAFE_NavigationContext),\n      basename = _React$useContext5.basename;\n\n  var routeContext = React.useContext(UNSAFE_RouteContext);\n  !routeContext ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"useFormAction must be used inside a RouteContext\") : UNSAFE_invariant(false) : void 0;\n\n  var _routeContext$matches = routeContext.matches.slice(-1),\n      _routeContext$matches2 = _slicedToArray(_routeContext$matches, 1),\n      match = _routeContext$matches2[0]; // Shallow clone path so we can modify it below, otherwise we modify the\n  // object referenced by useMemo inside useResolvedPath\n\n\n  var path = _extends({}, useResolvedPath(action ? action : \".\", {\n    relative: relative\n  })); // Previously we set the default action to \".\". The problem with this is that\n  // `useResolvedPath(\".\")` excludes search params of the resolved URL. This is\n  // the intended behavior of when \".\" is specifically provided as\n  // the form action, but inconsistent w/ browsers when the action is omitted.\n  // https://github.com/remix-run/remix/issues/927\n\n\n  var location = useLocation();\n\n  if (action == null) {\n    // Safe to write to this directly here since if action was undefined, we\n    // would have called useResolvedPath(\".\") which will never include a search\n    path.search = location.search; // When grabbing search params from the URL, remove the automatically\n    // inserted ?index param so we match the useResolvedPath search behavior\n    // which would not include ?index\n\n    if (match.route.index) {\n      var params = new URLSearchParams(path.search);\n      params.delete(\"index\");\n      path.search = params.toString() ? \"?\" + params.toString() : \"\";\n    }\n  }\n\n  if ((!action || action === \".\") && match.route.index) {\n    path.search = path.search ? path.search.replace(/^\\?/, \"?index&\") : \"?index\";\n  } // If we're operating within a basename, prepend it to the pathname prior\n  // to creating the form action.  If this is a root navigation, then just use\n  // the raw basename which allows the basename to have full control over the\n  // presence of a trailing slash on root actions\n\n\n  if (basename !== \"/\") {\n    path.pathname = path.pathname === \"/\" ? basename : joinPaths([basename, path.pathname]);\n  }\n\n  return createPath(path);\n}\n\nfunction createFetcherForm(fetcherKey, routeId) {\n  var FetcherForm = /*#__PURE__*/React.forwardRef(function (props, ref) {\n    var submit = useSubmitFetcher(fetcherKey, routeId);\n    return /*#__PURE__*/React.createElement(FormImpl, _extends({}, props, {\n      ref: ref,\n      submit: submit\n    }));\n  });\n\n  if (process.env.NODE_ENV !== \"production\") {\n    FetcherForm.displayName = \"fetcher.Form\";\n  }\n\n  return FetcherForm;\n}\n\nvar fetcherId = 0;\n/**\r\n * Interacts with route loaders and actions without causing a navigation. Great\r\n * for any interaction that stays on the same page.\r\n */\n\nfunction useFetcher() {\n  var _route$matches;\n\n  var _useDataRouterContext3 = useDataRouterContext(DataRouterHook.UseFetcher),\n      router = _useDataRouterContext3.router;\n\n  var route = React.useContext(UNSAFE_RouteContext);\n  !route ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"useFetcher must be used inside a RouteContext\") : UNSAFE_invariant(false) : void 0;\n  var routeId = (_route$matches = route.matches[route.matches.length - 1]) == null ? void 0 : _route$matches.route.id;\n  !(routeId != null) ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"useFetcher can only be used on routes that contain a unique \\\"id\\\"\") : UNSAFE_invariant(false) : void 0;\n\n  var _React$useState7 = React.useState(function () {\n    return String(++fetcherId);\n  }),\n      _React$useState8 = _slicedToArray(_React$useState7, 1),\n      fetcherKey = _React$useState8[0];\n\n  var _React$useState9 = React.useState(function () {\n    !routeId ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"No routeId available for fetcher.Form()\") : UNSAFE_invariant(false) : void 0;\n    return createFetcherForm(fetcherKey, routeId);\n  }),\n      _React$useState10 = _slicedToArray(_React$useState9, 1),\n      Form = _React$useState10[0];\n\n  var _React$useState11 = React.useState(function () {\n    return function (href) {\n      !router ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"No router available for fetcher.load()\") : UNSAFE_invariant(false) : void 0;\n      !routeId ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"No routeId available for fetcher.load()\") : UNSAFE_invariant(false) : void 0;\n      router.fetch(fetcherKey, routeId, href);\n    };\n  }),\n      _React$useState12 = _slicedToArray(_React$useState11, 1),\n      load = _React$useState12[0];\n\n  var submit = useSubmitFetcher(fetcherKey, routeId);\n  var fetcher = router.getFetcher(fetcherKey);\n  var fetcherWithComponents = React.useMemo(function () {\n    return _extends({\n      Form: Form,\n      submit: submit,\n      load: load\n    }, fetcher);\n  }, [fetcher, Form, submit, load]);\n  React.useEffect(function () {\n    // Is this busted when the React team gets real weird and calls effects\n    // twice on mount?  We really just need to garbage collect here when this\n    // fetcher is no longer around.\n    return function () {\n      if (!router) {\n        console.warn(\"No router available to clean up from useFetcher()\");\n        return;\n      }\n\n      router.deleteFetcher(fetcherKey);\n    };\n  }, [router, fetcherKey]);\n  return fetcherWithComponents;\n}\n/**\r\n * Provides all fetchers currently on the page. Useful for layouts and parent\r\n * routes that need to provide pending/optimistic UI regarding the fetch.\r\n */\n\n\nfunction useFetchers() {\n  var state = useDataRouterState(DataRouterStateHook.UseFetchers);\n  return _toConsumableArray(state.fetchers.values());\n}\n\nvar SCROLL_RESTORATION_STORAGE_KEY = \"react-router-scroll-positions\";\nvar savedScrollPositions = {};\n/**\r\n * When rendered inside a RouterProvider, will restore scroll positions on navigations\r\n */\n\nfunction useScrollRestoration(_temp3) {\n  var _ref14 = _temp3 === void 0 ? {} : _temp3,\n      getKey = _ref14.getKey,\n      storageKey = _ref14.storageKey;\n\n  var _useDataRouterContext4 = useDataRouterContext(DataRouterHook.UseScrollRestoration),\n      router = _useDataRouterContext4.router;\n\n  var _useDataRouterState = useDataRouterState(DataRouterStateHook.UseScrollRestoration),\n      restoreScrollPosition = _useDataRouterState.restoreScrollPosition,\n      preventScrollReset = _useDataRouterState.preventScrollReset;\n\n  var _React$useContext6 = React.useContext(UNSAFE_NavigationContext),\n      basename = _React$useContext6.basename;\n\n  var location = useLocation();\n  var matches = useMatches();\n  var navigation = useNavigation(); // Trigger manual scroll restoration while we're active\n\n  React.useEffect(function () {\n    window.history.scrollRestoration = \"manual\";\n    return function () {\n      window.history.scrollRestoration = \"auto\";\n    };\n  }, []); // Save positions on pagehide\n\n  usePageHide(React.useCallback(function () {\n    if (navigation.state === \"idle\") {\n      var key = (getKey ? getKey(location, matches) : null) || location.key;\n      savedScrollPositions[key] = window.scrollY;\n    }\n\n    sessionStorage.setItem(storageKey || SCROLL_RESTORATION_STORAGE_KEY, JSON.stringify(savedScrollPositions));\n    window.history.scrollRestoration = \"auto\";\n  }, [storageKey, getKey, navigation.state, location, matches])); // Read in any saved scroll locations\n\n  if (typeof document !== \"undefined\") {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useLayoutEffect(function () {\n      try {\n        var sessionPositions = sessionStorage.getItem(storageKey || SCROLL_RESTORATION_STORAGE_KEY);\n\n        if (sessionPositions) {\n          savedScrollPositions = JSON.parse(sessionPositions);\n        }\n      } catch (e) {// no-op, use default empty object\n      }\n    }, [storageKey]); // Enable scroll restoration in the router\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n\n    React.useLayoutEffect(function () {\n      var getKeyWithoutBasename = getKey && basename !== \"/\" ? function (location, matches) {\n        return getKey( // Strip the basename to match useLocation()\n        _extends({}, location, {\n          pathname: stripBasename(location.pathname, basename) || location.pathname\n        }), matches);\n      } : getKey;\n      var disableScrollRestoration = router == null ? void 0 : router.enableScrollRestoration(savedScrollPositions, function () {\n        return window.scrollY;\n      }, getKeyWithoutBasename);\n      return function () {\n        return disableScrollRestoration && disableScrollRestoration();\n      };\n    }, [router, basename, getKey]); // Restore scrolling when state.restoreScrollPosition changes\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n\n    React.useLayoutEffect(function () {\n      // Explicit false means don't do anything (used for submissions)\n      if (restoreScrollPosition === false) {\n        return;\n      } // been here before, scroll to it\n\n\n      if (typeof restoreScrollPosition === \"number\") {\n        window.scrollTo(0, restoreScrollPosition);\n        return;\n      } // try to scroll to the hash\n\n\n      if (location.hash) {\n        var el = document.getElementById(decodeURIComponent(location.hash.slice(1)));\n\n        if (el) {\n          el.scrollIntoView();\n          return;\n        }\n      } // Don't reset if this navigation opted out\n\n\n      if (preventScrollReset === true) {\n        return;\n      } // otherwise go to the top on new locations\n\n\n      window.scrollTo(0, 0);\n    }, [location, restoreScrollPosition, preventScrollReset]);\n  }\n}\n/**\r\n * Setup a callback to be fired on the window's `beforeunload` event. This is\r\n * useful for saving some data to `window.localStorage` just before the page\r\n * refreshes.\r\n *\r\n * Note: The `callback` argument should be a function created with\r\n * `React.useCallback()`.\r\n */\n\n\nfunction useBeforeUnload(callback, options) {\n  var _ref15 = options || {},\n      capture = _ref15.capture;\n\n  React.useEffect(function () {\n    var opts = capture != null ? {\n      capture: capture\n    } : undefined;\n    window.addEventListener(\"beforeunload\", callback, opts);\n    return function () {\n      window.removeEventListener(\"beforeunload\", callback, opts);\n    };\n  }, [callback, capture]);\n}\n/**\r\n * Setup a callback to be fired on the window's `pagehide` event. This is\r\n * useful for saving some data to `window.localStorage` just before the page\r\n * refreshes.  This event is better supported than beforeunload across browsers.\r\n *\r\n * Note: The `callback` argument should be a function created with\r\n * `React.useCallback()`.\r\n */\n\n\nfunction usePageHide(callback, options) {\n  var _ref16 = options || {},\n      capture = _ref16.capture;\n\n  React.useEffect(function () {\n    var opts = capture != null ? {\n      capture: capture\n    } : undefined;\n    window.addEventListener(\"pagehide\", callback, opts);\n    return function () {\n      window.removeEventListener(\"pagehide\", callback, opts);\n    };\n  }, [callback, capture]);\n}\n/**\r\n * Wrapper around useBlocker to show a window.confirm prompt to users instead\r\n * of building a custom UI with useBlocker.\r\n *\r\n * Warning: This has *a lot of rough edges* and behaves very differently (and\r\n * very incorrectly in some cases) across browsers if user click addition\r\n * back/forward navigations while the confirm is open.  Use at your own risk.\r\n */\n\n\nfunction usePrompt(_ref8) {\n  var when = _ref8.when,\n      message = _ref8.message;\n  var blocker = unstable_useBlocker(when);\n  React.useEffect(function () {\n    if (blocker.state === \"blocked\") {\n      var proceed = window.confirm(message);\n\n      if (proceed) {\n        // This timeout is needed to avoid a weird \"race\" on POP navigations\n        // between the `window.history` revert navigation and the result of\n        // `window.confirm`\n        setTimeout(blocker.proceed, 0);\n      } else {\n        blocker.reset();\n      }\n    }\n  }, [blocker, message]);\n  React.useEffect(function () {\n    if (blocker.state === \"blocked\" && !when) {\n      blocker.reset();\n    }\n  }, [blocker, when]);\n} //#endregion\n\n\nexport { BrowserRouter, Form, HashRouter, Link, NavLink, ScrollRestoration, useScrollRestoration as UNSAFE_useScrollRestoration, createBrowserRouter, createHashRouter, createSearchParams, HistoryRouter as unstable_HistoryRouter, usePrompt as unstable_usePrompt, useBeforeUnload, useFetcher, useFetchers, useFormAction, useLinkClickHandler, useSearchParams, useSubmit };","map":{"version":3,"mappings":"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","names":["defaultMethod","defaultEncType","isHtmlElement","object","tagName","isButtonElement","toLowerCase","isFormElement","isInputElement","isModifiedEvent","event","metaKey","altKey","ctrlKey","shiftKey","target","button","init","URLSearchParams","Array","isArray","Object","keys","reduce","memo","key","value","concat","map","v","locationSearch","defaultSearchParams","searchParams","createSearchParams","forEach","_","has","getAll","append","_formDataSupportsSubmitter","isFormDataSubmitterSupported","FormData","document","createElement","e","supportedFormEncTypes","Set","getFormEncType","encType","process","basename","method","action","formData","body","attr","getAttribute","stripBasename","type","form","Error","name","prefix","undefined","routes","opts","createRouter","future","v7_prependBasename","history","createBrowserHistory","window","hydrationData","parseHydrationData","mapRouteProperties","initialize","createHashHistory","state","_window","__staticRouterHydrationData","errors","deserializeErrors","entries","serialized","val","__type","ErrorResponse","status","statusText","data","internal","__subType","ErrorConstructor","error","message","stack","START_TRANSITION","startTransitionImpl","React","BrowserRouter","_ref","children","historyRef","useRef","current","v5Compat","useState","location","setStateImpl","v7_startTransition","setState","useCallback","newState","useLayoutEffect","listen","Router","navigationType","navigator","HashRouter","_ref2","HistoryRouter","_ref3","displayName","isBrowser","ABSOLUTE_URL_REGEX","Link","forwardRef","LinkWithRef","_ref4","ref","onClick","relative","reloadDocument","replace","to","preventScrollReset","rest","_objectWithoutPropertiesLoose","useContext","NavigationContext","absoluteHref","isExternal","test","currentUrl","URL","href","targetUrl","startsWith","protocol","path","pathname","origin","search","hash","useHref","internalOnClick","useLinkClickHandler","handleClick","defaultPrevented","NavLink","NavLinkWithRef","_ref5","ariaCurrentProp","caseSensitive","className","classNameProp","end","styleProp","style","useResolvedPath","useLocation","routerState","DataRouterStateContext","toPathname","encodeLocation","locationPathname","nextLocationPathname","navigation","isActive","charAt","length","isPending","ariaCurrent","filter","Boolean","join","_extends","Form","props","submit","useSubmit","FormImpl","forwardedRef","_ref6","onSubmit","formMethod","formAction","useFormAction","submitHandler","preventDefault","submitter","nativeEvent","submitMethod","currentTarget","ScrollRestoration","_ref7","getKey","storageKey","useScrollRestoration","DataRouterHook","DataRouterStateHook","getDataRouterConsoleError","hookName","useDataRouterContext","ctx","DataRouterContext","invariant","useDataRouterState","_temp","replaceProp","navigate","useNavigate","shouldProcessLinkClick","createPath","useSearchParams","defaultInit","defaultSearchParamsRef","hasSetSearchParamsRef","useMemo","getSearchParamsForLocation","setSearchParams","nextInit","navigateOptions","newSearchParams","validateClientSideSubmission","UseSubmit","router","currentRouteId","useRouteId","options","getFormSubmissionInfo","formEncType","fromRouteId","useSubmitFetcher","fetcherKey","fetcherRouteId","UseSubmitFetcher","fetch","_temp2","routeContext","RouteContext","matches","slice","match","route","index","params","delete","toString","joinPaths","createFetcherForm","routeId","FetcherForm","fetcherId","useFetcher","UseFetcher","_route$matches","id","String","load","fetcher","getFetcher","fetcherWithComponents","useEffect","console","warn","deleteFetcher","useFetchers","UseFetchers","fetchers","values","SCROLL_RESTORATION_STORAGE_KEY","savedScrollPositions","_temp3","UseScrollRestoration","restoreScrollPosition","useMatches","useNavigation","scrollRestoration","usePageHide","scrollY","sessionStorage","setItem","JSON","stringify","sessionPositions","getItem","parse","getKeyWithoutBasename","disableScrollRestoration","enableScrollRestoration","scrollTo","el","getElementById","decodeURIComponent","scrollIntoView","callback","capture","addEventListener","removeEventListener","usePrompt","_ref8","when","blocker","useBlocker","proceed","confirm","setTimeout","reset"],"sources":["E:\\Projects\\React Projects\\local-chat\\node_modules\\react-router-dom\\dom.ts","E:\\Projects\\React Projects\\local-chat\\node_modules\\react-router-dom\\index.tsx"],"sourcesContent":["import type {\n  FormEncType,\n  HTMLFormMethod,\n  RelativeRoutingType,\n} from \"@remix-run/router\";\nimport { stripBasename, UNSAFE_warning as warning } from \"@remix-run/router\";\n\nexport const defaultMethod: HTMLFormMethod = \"get\";\nconst defaultEncType: FormEncType = \"application/x-www-form-urlencoded\";\n\nexport function isHtmlElement(object: any): object is HTMLElement {\n  return object != null && typeof object.tagName === \"string\";\n}\n\nexport function isButtonElement(object: any): object is HTMLButtonElement {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"button\";\n}\n\nexport function isFormElement(object: any): object is HTMLFormElement {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"form\";\n}\n\nexport function isInputElement(object: any): object is HTMLInputElement {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"input\";\n}\n\ntype LimitedMouseEvent = Pick<\n  MouseEvent,\n  \"button\" | \"metaKey\" | \"altKey\" | \"ctrlKey\" | \"shiftKey\"\n>;\n\nfunction isModifiedEvent(event: LimitedMouseEvent) {\n  return !!(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey);\n}\n\nexport function shouldProcessLinkClick(\n  event: LimitedMouseEvent,\n  target?: string\n) {\n  return (\n    event.button === 0 && // Ignore everything but left clicks\n    (!target || target === \"_self\") && // Let browser handle \"target=_blank\" etc.\n    !isModifiedEvent(event) // Ignore clicks with modifier keys\n  );\n}\n\nexport type ParamKeyValuePair = [string, string];\n\nexport type URLSearchParamsInit =\n  | string\n  | ParamKeyValuePair[]\n  | Record<string, string | string[]>\n  | URLSearchParams;\n\n/**\n * Creates a URLSearchParams object using the given initializer.\n *\n * This is identical to `new URLSearchParams(init)` except it also\n * supports arrays as values in the object form of the initializer\n * instead of just strings. This is convenient when you need multiple\n * values for a given key, but don't want to use an array initializer.\n *\n * For example, instead of:\n *\n *   let searchParams = new URLSearchParams([\n *     ['sort', 'name'],\n *     ['sort', 'price']\n *   ]);\n *\n * you can do:\n *\n *   let searchParams = createSearchParams({\n *     sort: ['name', 'price']\n *   });\n */\nexport function createSearchParams(\n  init: URLSearchParamsInit = \"\"\n): URLSearchParams {\n  return new URLSearchParams(\n    typeof init === \"string\" ||\n    Array.isArray(init) ||\n    init instanceof URLSearchParams\n      ? init\n      : Object.keys(init).reduce((memo, key) => {\n          let value = init[key];\n          return memo.concat(\n            Array.isArray(value) ? value.map((v) => [key, v]) : [[key, value]]\n          );\n        }, [] as ParamKeyValuePair[])\n  );\n}\n\nexport function getSearchParamsForLocation(\n  locationSearch: string,\n  defaultSearchParams: URLSearchParams | null\n) {\n  let searchParams = createSearchParams(locationSearch);\n\n  if (defaultSearchParams) {\n    // Use `defaultSearchParams.forEach(...)` here instead of iterating of\n    // `defaultSearchParams.keys()` to work-around a bug in Firefox related to\n    // web extensions. Relevant Bugzilla tickets:\n    // https://bugzilla.mozilla.org/show_bug.cgi?id=1414602\n    // https://bugzilla.mozilla.org/show_bug.cgi?id=1023984\n    defaultSearchParams.forEach((_, key) => {\n      if (!searchParams.has(key)) {\n        defaultSearchParams.getAll(key).forEach((value) => {\n          searchParams.append(key, value);\n        });\n      }\n    });\n  }\n\n  return searchParams;\n}\n\n// Thanks https://github.com/sindresorhus/type-fest!\ntype JsonObject = { [Key in string]: JsonValue } & {\n  [Key in string]?: JsonValue | undefined;\n};\ntype JsonArray = JsonValue[] | readonly JsonValue[];\ntype JsonPrimitive = string | number | boolean | null;\ntype JsonValue = JsonPrimitive | JsonObject | JsonArray;\n\nexport type SubmitTarget =\n  | HTMLFormElement\n  | HTMLButtonElement\n  | HTMLInputElement\n  | FormData\n  | URLSearchParams\n  | JsonValue\n  | null;\n\n// One-time check for submitter support\nlet _formDataSupportsSubmitter: boolean | null = null;\n\nfunction isFormDataSubmitterSupported() {\n  if (_formDataSupportsSubmitter === null) {\n    try {\n      new FormData(\n        document.createElement(\"form\"),\n        // @ts-expect-error if FormData supports the submitter parameter, this will throw\n        0\n      );\n      _formDataSupportsSubmitter = false;\n    } catch (e) {\n      _formDataSupportsSubmitter = true;\n    }\n  }\n  return _formDataSupportsSubmitter;\n}\n\nexport interface SubmitOptions {\n  /**\n   * The HTTP method used to submit the form. Overrides `<form method>`.\n   * Defaults to \"GET\".\n   */\n  method?: HTMLFormMethod;\n\n  /**\n   * The action URL path used to submit the form. Overrides `<form action>`.\n   * Defaults to the path of the current route.\n   */\n  action?: string;\n\n  /**\n   * The encoding used to submit the form. Overrides `<form encType>`.\n   * Defaults to \"application/x-www-form-urlencoded\".\n   */\n  encType?: FormEncType;\n\n  /**\n   * Set `true` to replace the current entry in the browser's history stack\n   * instead of creating a new one (i.e. stay on \"the same page\"). Defaults\n   * to `false`.\n   */\n  replace?: boolean;\n\n  /**\n   * State object to add to the history stack entry for this navigation\n   */\n  state?: any;\n\n  /**\n   * Determines whether the form action is relative to the route hierarchy or\n   * the pathname.  Use this if you want to opt out of navigating the route\n   * hierarchy and want to instead route based on /-delimited URL segments\n   */\n  relative?: RelativeRoutingType;\n\n  /**\n   * In browser-based environments, prevent resetting scroll after this\n   * navigation when using the <ScrollRestoration> component\n   */\n  preventScrollReset?: boolean;\n}\n\nconst supportedFormEncTypes: Set<FormEncType> = new Set([\n  \"application/x-www-form-urlencoded\",\n  \"multipart/form-data\",\n  \"text/plain\",\n]);\n\nfunction getFormEncType(encType: string | null) {\n  if (encType != null && !supportedFormEncTypes.has(encType as FormEncType)) {\n    warning(\n      false,\n      `\"${encType}\" is not a valid \\`encType\\` for \\`<Form>\\`/\\`<fetcher.Form>\\` ` +\n        `and will default to \"${defaultEncType}\"`\n    );\n\n    return null;\n  }\n  return encType;\n}\n\nexport function getFormSubmissionInfo(\n  target: SubmitTarget,\n  basename: string\n): {\n  action: string | null;\n  method: string;\n  encType: string;\n  formData: FormData | undefined;\n  body: any;\n} {\n  let method: string;\n  let action: string | null;\n  let encType: string;\n  let formData: FormData | undefined;\n  let body: any;\n\n  if (isFormElement(target)) {\n    // When grabbing the action from the element, it will have had the basename\n    // prefixed to ensure non-JS scenarios work, so strip it since we'll\n    // re-prefix in the router\n    let attr = target.getAttribute(\"action\");\n    action = attr ? stripBasename(attr, basename) : null;\n    method = target.getAttribute(\"method\") || defaultMethod;\n    encType = getFormEncType(target.getAttribute(\"enctype\")) || defaultEncType;\n\n    formData = new FormData(target);\n  } else if (\n    isButtonElement(target) ||\n    (isInputElement(target) &&\n      (target.type === \"submit\" || target.type === \"image\"))\n  ) {\n    let form = target.form;\n\n    if (form == null) {\n      throw new Error(\n        `Cannot submit a <button> or <input type=\"submit\"> without a <form>`\n      );\n    }\n\n    // <button>/<input type=\"submit\"> may override attributes of <form>\n\n    // When grabbing the action from the element, it will have had the basename\n    // prefixed to ensure non-JS scenarios work, so strip it since we'll\n    // re-prefix in the router\n    let attr = target.getAttribute(\"formaction\") || form.getAttribute(\"action\");\n    action = attr ? stripBasename(attr, basename) : null;\n\n    method =\n      target.getAttribute(\"formmethod\") ||\n      form.getAttribute(\"method\") ||\n      defaultMethod;\n    encType =\n      getFormEncType(target.getAttribute(\"formenctype\")) ||\n      getFormEncType(form.getAttribute(\"enctype\")) ||\n      defaultEncType;\n\n    // Build a FormData object populated from a form and submitter\n    formData = new FormData(form, target);\n\n    // If this browser doesn't support the `FormData(el, submitter)` format,\n    // then tack on the submitter value at the end.  This is a lightweight\n    // solution that is not 100% spec compliant.  For complete support in older\n    // browsers, consider using the `formdata-submitter-polyfill` package\n    if (!isFormDataSubmitterSupported()) {\n      let { name, type, value } = target;\n      if (type === \"image\") {\n        let prefix = name ? `${name}.` : \"\";\n        formData.append(`${prefix}x`, \"0\");\n        formData.append(`${prefix}y`, \"0\");\n      } else if (name) {\n        formData.append(name, value);\n      }\n    }\n  } else if (isHtmlElement(target)) {\n    throw new Error(\n      `Cannot submit element that is not <form>, <button>, or ` +\n        `<input type=\"submit|image\">`\n    );\n  } else {\n    method = defaultMethod;\n    action = null;\n    encType = defaultEncType;\n    body = target;\n  }\n\n  // Send body for <Form encType=\"text/plain\" so we encode it into text\n  if (formData && encType === \"text/plain\") {\n    body = formData;\n    formData = undefined;\n  }\n\n  return { action, method: method.toLowerCase(), encType, formData, body };\n}\n","/**\n * NOTE: If you refactor this to split up the modules into separate files,\n * you'll need to update the rollup config for react-router-dom-v5-compat.\n */\nimport * as React from \"react\";\nimport type {\n  FutureConfig,\n  Location,\n  NavigateOptions,\n  NavigationType,\n  RelativeRoutingType,\n  RouteObject,\n  To,\n} from \"react-router\";\nimport {\n  Router,\n  createPath,\n  useHref,\n  useLocation,\n  useMatches,\n  useNavigate,\n  useNavigation,\n  useResolvedPath,\n  unstable_useBlocker as useBlocker,\n  UNSAFE_DataRouterContext as DataRouterContext,\n  UNSAFE_DataRouterStateContext as DataRouterStateContext,\n  UNSAFE_NavigationContext as NavigationContext,\n  UNSAFE_RouteContext as RouteContext,\n  UNSAFE_mapRouteProperties as mapRouteProperties,\n  UNSAFE_useRouteId as useRouteId,\n} from \"react-router\";\nimport type {\n  BrowserHistory,\n  Fetcher,\n  FormEncType,\n  FormMethod,\n  FutureConfig as RouterFutureConfig,\n  GetScrollRestorationKeyFunction,\n  HashHistory,\n  History,\n  HTMLFormMethod,\n  HydrationState,\n  Router as RemixRouter,\n  V7_FormMethod,\n} from \"@remix-run/router\";\nimport {\n  createRouter,\n  createBrowserHistory,\n  createHashHistory,\n  joinPaths,\n  stripBasename,\n  ErrorResponse,\n  UNSAFE_invariant as invariant,\n  UNSAFE_warning as warning,\n} from \"@remix-run/router\";\n\nimport type {\n  SubmitOptions,\n  ParamKeyValuePair,\n  URLSearchParamsInit,\n  SubmitTarget,\n} from \"./dom\";\nimport {\n  createSearchParams,\n  defaultMethod,\n  getFormSubmissionInfo,\n  getSearchParamsForLocation,\n  shouldProcessLinkClick,\n} from \"./dom\";\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Re-exports\n////////////////////////////////////////////////////////////////////////////////\n\nexport type {\n  FormEncType,\n  FormMethod,\n  GetScrollRestorationKeyFunction,\n  ParamKeyValuePair,\n  SubmitOptions,\n  URLSearchParamsInit,\n  V7_FormMethod,\n};\nexport { createSearchParams };\n\n// Note: Keep in sync with react-router exports!\nexport type {\n  ActionFunction,\n  ActionFunctionArgs,\n  AwaitProps,\n  unstable_Blocker,\n  unstable_BlockerFunction,\n  DataRouteMatch,\n  DataRouteObject,\n  Fetcher,\n  Hash,\n  IndexRouteObject,\n  IndexRouteProps,\n  JsonFunction,\n  LazyRouteFunction,\n  LayoutRouteProps,\n  LoaderFunction,\n  LoaderFunctionArgs,\n  Location,\n  MemoryRouterProps,\n  NavigateFunction,\n  NavigateOptions,\n  NavigateProps,\n  Navigation,\n  Navigator,\n  NonIndexRouteObject,\n  OutletProps,\n  Params,\n  ParamParseKey,\n  Path,\n  PathMatch,\n  Pathname,\n  PathPattern,\n  PathRouteProps,\n  RedirectFunction,\n  RelativeRoutingType,\n  RouteMatch,\n  RouteObject,\n  RouteProps,\n  RouterProps,\n  RouterProviderProps,\n  RoutesProps,\n  Search,\n  ShouldRevalidateFunction,\n  To,\n} from \"react-router\";\nexport {\n  AbortedDeferredError,\n  Await,\n  MemoryRouter,\n  Navigate,\n  NavigationType,\n  Outlet,\n  Route,\n  Router,\n  RouterProvider,\n  Routes,\n  createMemoryRouter,\n  createPath,\n  createRoutesFromChildren,\n  createRoutesFromElements,\n  defer,\n  isRouteErrorResponse,\n  generatePath,\n  json,\n  matchPath,\n  matchRoutes,\n  parsePath,\n  redirect,\n  redirectDocument,\n  renderMatches,\n  resolvePath,\n  useActionData,\n  useAsyncError,\n  useAsyncValue,\n  unstable_useBlocker,\n  useHref,\n  useInRouterContext,\n  useLoaderData,\n  useLocation,\n  useMatch,\n  useMatches,\n  useNavigate,\n  useNavigation,\n  useNavigationType,\n  useOutlet,\n  useOutletContext,\n  useParams,\n  useResolvedPath,\n  useRevalidator,\n  useRouteError,\n  useRouteLoaderData,\n  useRoutes,\n} from \"react-router\";\n\n///////////////////////////////////////////////////////////////////////////////\n// DANGER! PLEASE READ ME!\n// We provide these exports as an escape hatch in the event that you need any\n// routing data that we don't provide an explicit API for. With that said, we\n// want to cover your use case if we can, so if you feel the need to use these\n// we want to hear from you. Let us know what you're building and we'll do our\n// best to make sure we can support you!\n//\n// We consider these exports an implementation detail and do not guarantee\n// against any breaking changes, regardless of the semver release. Use with\n// extreme caution and only if you understand the consequences. Godspeed.\n///////////////////////////////////////////////////////////////////////////////\n\n/** @internal */\nexport {\n  UNSAFE_DataRouterContext,\n  UNSAFE_DataRouterStateContext,\n  UNSAFE_NavigationContext,\n  UNSAFE_LocationContext,\n  UNSAFE_RouteContext,\n  UNSAFE_useRouteId,\n} from \"react-router\";\n//#endregion\n\ndeclare global {\n  var __staticRouterHydrationData: HydrationState | undefined;\n}\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Routers\n////////////////////////////////////////////////////////////////////////////////\n\ninterface DOMRouterOpts {\n  basename?: string;\n  future?: Partial<Omit<RouterFutureConfig, \"v7_prependBasename\">>;\n  hydrationData?: HydrationState;\n  window?: Window;\n}\n\nexport function createBrowserRouter(\n  routes: RouteObject[],\n  opts?: DOMRouterOpts\n): RemixRouter {\n  return createRouter({\n    basename: opts?.basename,\n    future: {\n      ...opts?.future,\n      v7_prependBasename: true,\n    },\n    history: createBrowserHistory({ window: opts?.window }),\n    hydrationData: opts?.hydrationData || parseHydrationData(),\n    routes,\n    mapRouteProperties,\n  }).initialize();\n}\n\nexport function createHashRouter(\n  routes: RouteObject[],\n  opts?: DOMRouterOpts\n): RemixRouter {\n  return createRouter({\n    basename: opts?.basename,\n    future: {\n      ...opts?.future,\n      v7_prependBasename: true,\n    },\n    history: createHashHistory({ window: opts?.window }),\n    hydrationData: opts?.hydrationData || parseHydrationData(),\n    routes,\n    mapRouteProperties,\n  }).initialize();\n}\n\nfunction parseHydrationData(): HydrationState | undefined {\n  let state = window?.__staticRouterHydrationData;\n  if (state && state.errors) {\n    state = {\n      ...state,\n      errors: deserializeErrors(state.errors),\n    };\n  }\n  return state;\n}\n\nfunction deserializeErrors(\n  errors: RemixRouter[\"state\"][\"errors\"]\n): RemixRouter[\"state\"][\"errors\"] {\n  if (!errors) return null;\n  let entries = Object.entries(errors);\n  let serialized: RemixRouter[\"state\"][\"errors\"] = {};\n  for (let [key, val] of entries) {\n    // Hey you!  If you change this, please change the corresponding logic in\n    // serializeErrors in react-router-dom/server.tsx :)\n    if (val && val.__type === \"RouteErrorResponse\") {\n      serialized[key] = new ErrorResponse(\n        val.status,\n        val.statusText,\n        val.data,\n        val.internal === true\n      );\n    } else if (val && val.__type === \"Error\") {\n      // Attempt to reconstruct the right type of Error (i.e., ReferenceError)\n      if (val.__subType) {\n        let ErrorConstructor = window[val.__subType];\n        if (typeof ErrorConstructor === \"function\") {\n          try {\n            // @ts-expect-error\n            let error = new ErrorConstructor(val.message);\n            // Wipe away the client-side stack trace.  Nothing to fill it in with\n            // because we don't serialize SSR stack traces for security reasons\n            error.stack = \"\";\n            serialized[key] = error;\n          } catch (e) {\n            // no-op - fall through and create a normal Error\n          }\n        }\n      }\n\n      if (serialized[key] == null) {\n        let error = new Error(val.message);\n        // Wipe away the client-side stack trace.  Nothing to fill it in with\n        // because we don't serialize SSR stack traces for security reasons\n        error.stack = \"\";\n        serialized[key] = error;\n      }\n    } else {\n      serialized[key] = val;\n    }\n  }\n  return serialized;\n}\n\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Components\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n  Webpack + React 17 fails to compile on any of the following because webpack\n  complains that `startTransition` doesn't exist in `React`:\n  * import { startTransition } from \"react\"\n  * import * as React from from \"react\";\n    \"startTransition\" in React ? React.startTransition(() => setState()) : setState()\n  * import * as React from from \"react\";\n    \"startTransition\" in React ? React[\"startTransition\"](() => setState()) : setState()\n\n  Moving it to a constant such as the following solves the Webpack/React 17 issue:\n  * import * as React from from \"react\";\n    const START_TRANSITION = \"startTransition\";\n    START_TRANSITION in React ? React[START_TRANSITION](() => setState()) : setState()\n\n  However, that introduces webpack/terser minification issues in production builds\n  in React 18 where minification/obfuscation ends up removing the call of\n  React.startTransition entirely from the first half of the ternary.  Grabbing\n  this exported reference once up front resolves that issue.\n\n  See https://github.com/remix-run/react-router/issues/10579\n*/\nconst START_TRANSITION = \"startTransition\";\nconst startTransitionImpl = React[START_TRANSITION];\n\nexport interface BrowserRouterProps {\n  basename?: string;\n  children?: React.ReactNode;\n  future?: FutureConfig;\n  window?: Window;\n}\n\n/**\n * A `<Router>` for use in web browsers. Provides the cleanest URLs.\n */\nexport function BrowserRouter({\n  basename,\n  children,\n  future,\n  window,\n}: BrowserRouterProps) {\n  let historyRef = React.useRef<BrowserHistory>();\n  if (historyRef.current == null) {\n    historyRef.current = createBrowserHistory({ window, v5Compat: true });\n  }\n\n  let history = historyRef.current;\n  let [state, setStateImpl] = React.useState({\n    action: history.action,\n    location: history.location,\n  });\n  let { v7_startTransition } = future || {};\n  let setState = React.useCallback(\n    (newState: { action: NavigationType; location: Location }) => {\n      v7_startTransition && startTransitionImpl\n        ? startTransitionImpl(() => setStateImpl(newState))\n        : setStateImpl(newState);\n    },\n    [setStateImpl, v7_startTransition]\n  );\n\n  React.useLayoutEffect(() => history.listen(setState), [history, setState]);\n\n  return (\n    <Router\n      basename={basename}\n      children={children}\n      location={state.location}\n      navigationType={state.action}\n      navigator={history}\n    />\n  );\n}\n\nexport interface HashRouterProps {\n  basename?: string;\n  children?: React.ReactNode;\n  future?: FutureConfig;\n  window?: Window;\n}\n\n/**\n * A `<Router>` for use in web browsers. Stores the location in the hash\n * portion of the URL so it is not sent to the server.\n */\nexport function HashRouter({\n  basename,\n  children,\n  future,\n  window,\n}: HashRouterProps) {\n  let historyRef = React.useRef<HashHistory>();\n  if (historyRef.current == null) {\n    historyRef.current = createHashHistory({ window, v5Compat: true });\n  }\n\n  let history = historyRef.current;\n  let [state, setStateImpl] = React.useState({\n    action: history.action,\n    location: history.location,\n  });\n  let { v7_startTransition } = future || {};\n  let setState = React.useCallback(\n    (newState: { action: NavigationType; location: Location }) => {\n      v7_startTransition && startTransitionImpl\n        ? startTransitionImpl(() => setStateImpl(newState))\n        : setStateImpl(newState);\n    },\n    [setStateImpl, v7_startTransition]\n  );\n\n  React.useLayoutEffect(() => history.listen(setState), [history, setState]);\n\n  return (\n    <Router\n      basename={basename}\n      children={children}\n      location={state.location}\n      navigationType={state.action}\n      navigator={history}\n    />\n  );\n}\n\nexport interface HistoryRouterProps {\n  basename?: string;\n  children?: React.ReactNode;\n  future?: FutureConfig;\n  history: History;\n}\n\n/**\n * A `<Router>` that accepts a pre-instantiated history object. It's important\n * to note that using your own history object is highly discouraged and may add\n * two versions of the history library to your bundles unless you use the same\n * version of the history library that React Router uses internally.\n */\nfunction HistoryRouter({\n  basename,\n  children,\n  future,\n  history,\n}: HistoryRouterProps) {\n  let [state, setStateImpl] = React.useState({\n    action: history.action,\n    location: history.location,\n  });\n  let { v7_startTransition } = future || {};\n  let setState = React.useCallback(\n    (newState: { action: NavigationType; location: Location }) => {\n      v7_startTransition && startTransitionImpl\n        ? startTransitionImpl(() => setStateImpl(newState))\n        : setStateImpl(newState);\n    },\n    [setStateImpl, v7_startTransition]\n  );\n\n  React.useLayoutEffect(() => history.listen(setState), [history, setState]);\n\n  return (\n    <Router\n      basename={basename}\n      children={children}\n      location={state.location}\n      navigationType={state.action}\n      navigator={history}\n    />\n  );\n}\n\nif (__DEV__) {\n  HistoryRouter.displayName = \"unstable_HistoryRouter\";\n}\n\nexport { HistoryRouter as unstable_HistoryRouter };\n\nexport interface LinkProps\n  extends Omit<React.AnchorHTMLAttributes<HTMLAnchorElement>, \"href\"> {\n  reloadDocument?: boolean;\n  replace?: boolean;\n  state?: any;\n  preventScrollReset?: boolean;\n  relative?: RelativeRoutingType;\n  to: To;\n}\n\nconst isBrowser =\n  typeof window !== \"undefined\" &&\n  typeof window.document !== \"undefined\" &&\n  typeof window.document.createElement !== \"undefined\";\n\nconst ABSOLUTE_URL_REGEX = /^(?:[a-z][a-z0-9+.-]*:|\\/\\/)/i;\n\n/**\n * The public API for rendering a history-aware <a>.\n */\nexport const Link = React.forwardRef<HTMLAnchorElement, LinkProps>(\n  function LinkWithRef(\n    {\n      onClick,\n      relative,\n      reloadDocument,\n      replace,\n      state,\n      target,\n      to,\n      preventScrollReset,\n      ...rest\n    },\n    ref\n  ) {\n    let { basename } = React.useContext(NavigationContext);\n\n    // Rendered into <a href> for absolute URLs\n    let absoluteHref;\n    let isExternal = false;\n\n    if (typeof to === \"string\" && ABSOLUTE_URL_REGEX.test(to)) {\n      // Render the absolute href server- and client-side\n      absoluteHref = to;\n\n      // Only check for external origins client-side\n      if (isBrowser) {\n        try {\n          let currentUrl = new URL(window.location.href);\n          let targetUrl = to.startsWith(\"//\")\n            ? new URL(currentUrl.protocol + to)\n            : new URL(to);\n          let path = stripBasename(targetUrl.pathname, basename);\n\n          if (targetUrl.origin === currentUrl.origin && path != null) {\n            // Strip the protocol/origin/basename for same-origin absolute URLs\n            to = path + targetUrl.search + targetUrl.hash;\n          } else {\n            isExternal = true;\n          }\n        } catch (e) {\n          // We can't do external URL detection without a valid URL\n          warning(\n            false,\n            `<Link to=\"${to}\"> contains an invalid URL which will probably break ` +\n              `when clicked - please update to a valid URL path.`\n          );\n        }\n      }\n    }\n\n    // Rendered into <a href> for relative URLs\n    let href = useHref(to, { relative });\n\n    let internalOnClick = useLinkClickHandler(to, {\n      replace,\n      state,\n      target,\n      preventScrollReset,\n      relative,\n    });\n    function handleClick(\n      event: React.MouseEvent<HTMLAnchorElement, MouseEvent>\n    ) {\n      if (onClick) onClick(event);\n      if (!event.defaultPrevented) {\n        internalOnClick(event);\n      }\n    }\n\n    return (\n      // eslint-disable-next-line jsx-a11y/anchor-has-content\n      <a\n        {...rest}\n        href={absoluteHref || href}\n        onClick={isExternal || reloadDocument ? onClick : handleClick}\n        ref={ref}\n        target={target}\n      />\n    );\n  }\n);\n\nif (__DEV__) {\n  Link.displayName = \"Link\";\n}\n\nexport interface NavLinkProps\n  extends Omit<LinkProps, \"className\" | \"style\" | \"children\"> {\n  children?:\n    | React.ReactNode\n    | ((props: { isActive: boolean; isPending: boolean }) => React.ReactNode);\n  caseSensitive?: boolean;\n  className?:\n    | string\n    | ((props: {\n        isActive: boolean;\n        isPending: boolean;\n      }) => string | undefined);\n  end?: boolean;\n  style?:\n    | React.CSSProperties\n    | ((props: {\n        isActive: boolean;\n        isPending: boolean;\n      }) => React.CSSProperties | undefined);\n}\n\n/**\n * A <Link> wrapper that knows if it's \"active\" or not.\n */\nexport const NavLink = React.forwardRef<HTMLAnchorElement, NavLinkProps>(\n  function NavLinkWithRef(\n    {\n      \"aria-current\": ariaCurrentProp = \"page\",\n      caseSensitive = false,\n      className: classNameProp = \"\",\n      end = false,\n      style: styleProp,\n      to,\n      children,\n      ...rest\n    },\n    ref\n  ) {\n    let path = useResolvedPath(to, { relative: rest.relative });\n    let location = useLocation();\n    let routerState = React.useContext(DataRouterStateContext);\n    let { navigator } = React.useContext(NavigationContext);\n\n    let toPathname = navigator.encodeLocation\n      ? navigator.encodeLocation(path).pathname\n      : path.pathname;\n    let locationPathname = location.pathname;\n    let nextLocationPathname =\n      routerState && routerState.navigation && routerState.navigation.location\n        ? routerState.navigation.location.pathname\n        : null;\n\n    if (!caseSensitive) {\n      locationPathname = locationPathname.toLowerCase();\n      nextLocationPathname = nextLocationPathname\n        ? nextLocationPathname.toLowerCase()\n        : null;\n      toPathname = toPathname.toLowerCase();\n    }\n\n    let isActive =\n      locationPathname === toPathname ||\n      (!end &&\n        locationPathname.startsWith(toPathname) &&\n        locationPathname.charAt(toPathname.length) === \"/\");\n\n    let isPending =\n      nextLocationPathname != null &&\n      (nextLocationPathname === toPathname ||\n        (!end &&\n          nextLocationPathname.startsWith(toPathname) &&\n          nextLocationPathname.charAt(toPathname.length) === \"/\"));\n\n    let ariaCurrent = isActive ? ariaCurrentProp : undefined;\n\n    let className: string | undefined;\n    if (typeof classNameProp === \"function\") {\n      className = classNameProp({ isActive, isPending });\n    } else {\n      // If the className prop is not a function, we use a default `active`\n      // class for <NavLink />s that are active. In v5 `active` was the default\n      // value for `activeClassName`, but we are removing that API and can still\n      // use the old default behavior for a cleaner upgrade path and keep the\n      // simple styling rules working as they currently do.\n      className = [\n        classNameProp,\n        isActive ? \"active\" : null,\n        isPending ? \"pending\" : null,\n      ]\n        .filter(Boolean)\n        .join(\" \");\n    }\n\n    let style =\n      typeof styleProp === \"function\"\n        ? styleProp({ isActive, isPending })\n        : styleProp;\n\n    return (\n      <Link\n        {...rest}\n        aria-current={ariaCurrent}\n        className={className}\n        ref={ref}\n        style={style}\n        to={to}\n      >\n        {typeof children === \"function\"\n          ? children({ isActive, isPending })\n          : children}\n      </Link>\n    );\n  }\n);\n\nif (__DEV__) {\n  NavLink.displayName = \"NavLink\";\n}\n\nexport interface FetcherFormProps\n  extends React.FormHTMLAttributes<HTMLFormElement> {\n  /**\n   * The HTTP verb to use when the form is submit. Supports \"get\", \"post\",\n   * \"put\", \"delete\", \"patch\".\n   */\n  method?: HTMLFormMethod;\n\n  /**\n   * `<form encType>` - enhancing beyond the normal string type and limiting\n   * to the built-in browser supported values\n   */\n  encType?:\n    | \"application/x-www-form-urlencoded\"\n    | \"multipart/form-data\"\n    | \"text/plain\";\n\n  /**\n   * Normal `<form action>` but supports React Router's relative paths.\n   */\n  action?: string;\n\n  /**\n   * Determines whether the form action is relative to the route hierarchy or\n   * the pathname.  Use this if you want to opt out of navigating the route\n   * hierarchy and want to instead route based on /-delimited URL segments\n   */\n  relative?: RelativeRoutingType;\n\n  /**\n   * Prevent the scroll position from resetting to the top of the viewport on\n   * completion of the navigation when using the <ScrollRestoration> component\n   */\n  preventScrollReset?: boolean;\n\n  /**\n   * A function to call when the form is submitted. If you call\n   * `event.preventDefault()` then this form will not do anything.\n   */\n  onSubmit?: React.FormEventHandler<HTMLFormElement>;\n}\n\nexport interface FormProps extends FetcherFormProps {\n  /**\n   * Forces a full document navigation instead of a fetch.\n   */\n  reloadDocument?: boolean;\n\n  /**\n   * Replaces the current entry in the browser history stack when the form\n   * navigates. Use this if you don't want the user to be able to click \"back\"\n   * to the page with the form on it.\n   */\n  replace?: boolean;\n\n  /**\n   * State object to add to the history stack entry for this navigation\n   */\n  state?: any;\n}\n\n/**\n * A `@remix-run/router`-aware `<form>`. It behaves like a normal form except\n * that the interaction with the server is with `fetch` instead of new document\n * requests, allowing components to add nicer UX to the page as the form is\n * submitted and returns with data.\n */\nexport const Form = React.forwardRef<HTMLFormElement, FormProps>(\n  (props, ref) => {\n    let submit = useSubmit();\n    return <FormImpl {...props} submit={submit} ref={ref} />;\n  }\n);\n\nif (__DEV__) {\n  Form.displayName = \"Form\";\n}\n\ntype HTMLSubmitEvent = React.BaseSyntheticEvent<\n  SubmitEvent,\n  Event,\n  HTMLFormElement\n>;\n\ntype HTMLFormSubmitter = HTMLButtonElement | HTMLInputElement;\n\ninterface FormImplProps extends FormProps {\n  submit: SubmitFunction | FetcherSubmitFunction;\n}\n\nconst FormImpl = React.forwardRef<HTMLFormElement, FormImplProps>(\n  (\n    {\n      reloadDocument,\n      replace,\n      state,\n      method = defaultMethod,\n      action,\n      onSubmit,\n      submit,\n      relative,\n      preventScrollReset,\n      ...props\n    },\n    forwardedRef\n  ) => {\n    let formMethod: HTMLFormMethod =\n      method.toLowerCase() === \"get\" ? \"get\" : \"post\";\n    let formAction = useFormAction(action, { relative });\n    let submitHandler: React.FormEventHandler<HTMLFormElement> = (event) => {\n      onSubmit && onSubmit(event);\n      if (event.defaultPrevented) return;\n      event.preventDefault();\n\n      let submitter = (event as unknown as HTMLSubmitEvent).nativeEvent\n        .submitter as HTMLFormSubmitter | null;\n\n      let submitMethod =\n        (submitter?.getAttribute(\"formmethod\") as HTMLFormMethod | undefined) ||\n        method;\n\n      submit(submitter || event.currentTarget, {\n        method: submitMethod,\n        replace,\n        state,\n        relative,\n        preventScrollReset,\n      });\n    };\n\n    return (\n      <form\n        ref={forwardedRef}\n        method={formMethod}\n        action={formAction}\n        onSubmit={reloadDocument ? onSubmit : submitHandler}\n        {...props}\n      />\n    );\n  }\n);\n\nif (__DEV__) {\n  FormImpl.displayName = \"FormImpl\";\n}\n\nexport interface ScrollRestorationProps {\n  getKey?: GetScrollRestorationKeyFunction;\n  storageKey?: string;\n}\n\n/**\n * This component will emulate the browser's scroll restoration on location\n * changes.\n */\nexport function ScrollRestoration({\n  getKey,\n  storageKey,\n}: ScrollRestorationProps) {\n  useScrollRestoration({ getKey, storageKey });\n  return null;\n}\n\nif (__DEV__) {\n  ScrollRestoration.displayName = \"ScrollRestoration\";\n}\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Hooks\n////////////////////////////////////////////////////////////////////////////////\n\nenum DataRouterHook {\n  UseScrollRestoration = \"useScrollRestoration\",\n  UseSubmit = \"useSubmit\",\n  UseSubmitFetcher = \"useSubmitFetcher\",\n  UseFetcher = \"useFetcher\",\n}\n\nenum DataRouterStateHook {\n  UseFetchers = \"useFetchers\",\n  UseScrollRestoration = \"useScrollRestoration\",\n}\n\nfunction getDataRouterConsoleError(\n  hookName: DataRouterHook | DataRouterStateHook\n) {\n  return `${hookName} must be used within a data router.  See https://reactrouter.com/routers/picking-a-router.`;\n}\n\nfunction useDataRouterContext(hookName: DataRouterHook) {\n  let ctx = React.useContext(DataRouterContext);\n  invariant(ctx, getDataRouterConsoleError(hookName));\n  return ctx;\n}\n\nfunction useDataRouterState(hookName: DataRouterStateHook) {\n  let state = React.useContext(DataRouterStateContext);\n  invariant(state, getDataRouterConsoleError(hookName));\n  return state;\n}\n\n/**\n * Handles the click behavior for router `<Link>` components. This is useful if\n * you need to create custom `<Link>` components with the same click behavior we\n * use in our exported `<Link>`.\n */\nexport function useLinkClickHandler<E extends Element = HTMLAnchorElement>(\n  to: To,\n  {\n    target,\n    replace: replaceProp,\n    state,\n    preventScrollReset,\n    relative,\n  }: {\n    target?: React.HTMLAttributeAnchorTarget;\n    replace?: boolean;\n    state?: any;\n    preventScrollReset?: boolean;\n    relative?: RelativeRoutingType;\n  } = {}\n): (event: React.MouseEvent<E, MouseEvent>) => void {\n  let navigate = useNavigate();\n  let location = useLocation();\n  let path = useResolvedPath(to, { relative });\n\n  return React.useCallback(\n    (event: React.MouseEvent<E, MouseEvent>) => {\n      if (shouldProcessLinkClick(event, target)) {\n        event.preventDefault();\n\n        // If the URL hasn't changed, a regular <a> will do a replace instead of\n        // a push, so do the same here unless the replace prop is explicitly set\n        let replace =\n          replaceProp !== undefined\n            ? replaceProp\n            : createPath(location) === createPath(path);\n\n        navigate(to, { replace, state, preventScrollReset, relative });\n      }\n    },\n    [\n      location,\n      navigate,\n      path,\n      replaceProp,\n      state,\n      target,\n      to,\n      preventScrollReset,\n      relative,\n    ]\n  );\n}\n\n/**\n * A convenient wrapper for reading and writing search parameters via the\n * URLSearchParams interface.\n */\nexport function useSearchParams(\n  defaultInit?: URLSearchParamsInit\n): [URLSearchParams, SetURLSearchParams] {\n  warning(\n    typeof URLSearchParams !== \"undefined\",\n    `You cannot use the \\`useSearchParams\\` hook in a browser that does not ` +\n      `support the URLSearchParams API. If you need to support Internet ` +\n      `Explorer 11, we recommend you load a polyfill such as ` +\n      `https://github.com/ungap/url-search-params\\n\\n` +\n      `If you're unsure how to load polyfills, we recommend you check out ` +\n      `https://polyfill.io/v3/ which provides some recommendations about how ` +\n      `to load polyfills only for users that need them, instead of for every ` +\n      `user.`\n  );\n\n  let defaultSearchParamsRef = React.useRef(createSearchParams(defaultInit));\n  let hasSetSearchParamsRef = React.useRef(false);\n\n  let location = useLocation();\n  let searchParams = React.useMemo(\n    () =>\n      // Only merge in the defaults if we haven't yet called setSearchParams.\n      // Once we call that we want those to take precedence, otherwise you can't\n      // remove a param with setSearchParams({}) if it has an initial value\n      getSearchParamsForLocation(\n        location.search,\n        hasSetSearchParamsRef.current ? null : defaultSearchParamsRef.current\n      ),\n    [location.search]\n  );\n\n  let navigate = useNavigate();\n  let setSearchParams = React.useCallback<SetURLSearchParams>(\n    (nextInit, navigateOptions) => {\n      const newSearchParams = createSearchParams(\n        typeof nextInit === \"function\" ? nextInit(searchParams) : nextInit\n      );\n      hasSetSearchParamsRef.current = true;\n      navigate(\"?\" + newSearchParams, navigateOptions);\n    },\n    [navigate, searchParams]\n  );\n\n  return [searchParams, setSearchParams];\n}\n\nexport type SetURLSearchParams = (\n  nextInit?:\n    | URLSearchParamsInit\n    | ((prev: URLSearchParams) => URLSearchParamsInit),\n  navigateOpts?: NavigateOptions\n) => void;\n\n/**\n * Submits a HTML `<form>` to the server without reloading the page.\n */\nexport interface SubmitFunction {\n  (\n    /**\n     * Specifies the `<form>` to be submitted to the server, a specific\n     * `<button>` or `<input type=\"submit\">` to use to submit the form, or some\n     * arbitrary data to submit.\n     *\n     * Note: When using a `<button>` its `name` and `value` will also be\n     * included in the form data that is submitted.\n     */\n    target: SubmitTarget,\n\n    /**\n     * Options that override the `<form>`'s own attributes. Required when\n     * submitting arbitrary data without a backing `<form>`.\n     */\n    options?: SubmitOptions\n  ): void;\n}\n\n/**\n * Submits a fetcher `<form>` to the server without reloading the page.\n */\nexport interface FetcherSubmitFunction {\n  (\n    target: SubmitTarget,\n    // Fetchers cannot replace or set state because they are not navigation events\n    options?: Omit<SubmitOptions, \"replace\" | \"state\">\n  ): void;\n}\n\nfunction validateClientSideSubmission() {\n  if (typeof document === \"undefined\") {\n    throw new Error(\n      \"You are calling submit during the server render. \" +\n        \"Try calling submit within a `useEffect` or callback instead.\"\n    );\n  }\n}\n\n/**\n * Returns a function that may be used to programmatically submit a form (or\n * some arbitrary data) to the server.\n */\nexport function useSubmit(): SubmitFunction {\n  let { router } = useDataRouterContext(DataRouterHook.UseSubmit);\n  let { basename } = React.useContext(NavigationContext);\n  let currentRouteId = useRouteId();\n\n  return React.useCallback<SubmitFunction>(\n    (target, options = {}) => {\n      validateClientSideSubmission();\n\n      let { action, method, encType, formData, body } = getFormSubmissionInfo(\n        target,\n        basename\n      );\n\n      router.navigate(options.action || action, {\n        preventScrollReset: options.preventScrollReset,\n        formData,\n        body,\n        formMethod: options.method || (method as HTMLFormMethod),\n        formEncType: options.encType || (encType as FormEncType),\n        replace: options.replace,\n        state: options.state,\n        fromRouteId: currentRouteId,\n      });\n    },\n    [router, basename, currentRouteId]\n  );\n}\n\n/**\n * Returns the implementation for fetcher.submit\n */\nfunction useSubmitFetcher(\n  fetcherKey: string,\n  fetcherRouteId: string\n): FetcherSubmitFunction {\n  let { router } = useDataRouterContext(DataRouterHook.UseSubmitFetcher);\n  let { basename } = React.useContext(NavigationContext);\n\n  return React.useCallback<FetcherSubmitFunction>(\n    (target, options = {}) => {\n      validateClientSideSubmission();\n\n      let { action, method, encType, formData, body } = getFormSubmissionInfo(\n        target,\n        basename\n      );\n\n      invariant(\n        fetcherRouteId != null,\n        \"No routeId available for useFetcher()\"\n      );\n      router.fetch(fetcherKey, fetcherRouteId, options.action || action, {\n        preventScrollReset: options.preventScrollReset,\n        formData,\n        body,\n        formMethod: options.method || (method as HTMLFormMethod),\n        formEncType: options.encType || (encType as FormEncType),\n      });\n    },\n    [router, basename, fetcherKey, fetcherRouteId]\n  );\n}\n\n// v7: Eventually we should deprecate this entirely in favor of using the\n// router method directly?\nexport function useFormAction(\n  action?: string,\n  { relative }: { relative?: RelativeRoutingType } = {}\n): string {\n  let { basename } = React.useContext(NavigationContext);\n  let routeContext = React.useContext(RouteContext);\n  invariant(routeContext, \"useFormAction must be used inside a RouteContext\");\n\n  let [match] = routeContext.matches.slice(-1);\n  // Shallow clone path so we can modify it below, otherwise we modify the\n  // object referenced by useMemo inside useResolvedPath\n  let path = { ...useResolvedPath(action ? action : \".\", { relative }) };\n\n  // Previously we set the default action to \".\". The problem with this is that\n  // `useResolvedPath(\".\")` excludes search params of the resolved URL. This is\n  // the intended behavior of when \".\" is specifically provided as\n  // the form action, but inconsistent w/ browsers when the action is omitted.\n  // https://github.com/remix-run/remix/issues/927\n  let location = useLocation();\n  if (action == null) {\n    // Safe to write to this directly here since if action was undefined, we\n    // would have called useResolvedPath(\".\") which will never include a search\n    path.search = location.search;\n\n    // When grabbing search params from the URL, remove the automatically\n    // inserted ?index param so we match the useResolvedPath search behavior\n    // which would not include ?index\n    if (match.route.index) {\n      let params = new URLSearchParams(path.search);\n      params.delete(\"index\");\n      path.search = params.toString() ? `?${params.toString()}` : \"\";\n    }\n  }\n\n  if ((!action || action === \".\") && match.route.index) {\n    path.search = path.search\n      ? path.search.replace(/^\\?/, \"?index&\")\n      : \"?index\";\n  }\n\n  // If we're operating within a basename, prepend it to the pathname prior\n  // to creating the form action.  If this is a root navigation, then just use\n  // the raw basename which allows the basename to have full control over the\n  // presence of a trailing slash on root actions\n  if (basename !== \"/\") {\n    path.pathname =\n      path.pathname === \"/\" ? basename : joinPaths([basename, path.pathname]);\n  }\n\n  return createPath(path);\n}\n\nfunction createFetcherForm(fetcherKey: string, routeId: string) {\n  let FetcherForm = React.forwardRef<HTMLFormElement, FetcherFormProps>(\n    (props, ref) => {\n      let submit = useSubmitFetcher(fetcherKey, routeId);\n      return <FormImpl {...props} ref={ref} submit={submit} />;\n    }\n  );\n  if (__DEV__) {\n    FetcherForm.displayName = \"fetcher.Form\";\n  }\n  return FetcherForm;\n}\n\nlet fetcherId = 0;\n\nexport type FetcherWithComponents<TData> = Fetcher<TData> & {\n  Form: ReturnType<typeof createFetcherForm>;\n  submit: FetcherSubmitFunction;\n  load: (href: string) => void;\n};\n\n/**\n * Interacts with route loaders and actions without causing a navigation. Great\n * for any interaction that stays on the same page.\n */\nexport function useFetcher<TData = any>(): FetcherWithComponents<TData> {\n  let { router } = useDataRouterContext(DataRouterHook.UseFetcher);\n\n  let route = React.useContext(RouteContext);\n  invariant(route, `useFetcher must be used inside a RouteContext`);\n\n  let routeId = route.matches[route.matches.length - 1]?.route.id;\n  invariant(\n    routeId != null,\n    `useFetcher can only be used on routes that contain a unique \"id\"`\n  );\n\n  let [fetcherKey] = React.useState(() => String(++fetcherId));\n  let [Form] = React.useState(() => {\n    invariant(routeId, `No routeId available for fetcher.Form()`);\n    return createFetcherForm(fetcherKey, routeId);\n  });\n  let [load] = React.useState(() => (href: string) => {\n    invariant(router, \"No router available for fetcher.load()\");\n    invariant(routeId, \"No routeId available for fetcher.load()\");\n    router.fetch(fetcherKey, routeId, href);\n  });\n  let submit = useSubmitFetcher(fetcherKey, routeId);\n\n  let fetcher = router.getFetcher<TData>(fetcherKey);\n\n  let fetcherWithComponents = React.useMemo(\n    () => ({\n      Form,\n      submit,\n      load,\n      ...fetcher,\n    }),\n    [fetcher, Form, submit, load]\n  );\n\n  React.useEffect(() => {\n    // Is this busted when the React team gets real weird and calls effects\n    // twice on mount?  We really just need to garbage collect here when this\n    // fetcher is no longer around.\n    return () => {\n      if (!router) {\n        console.warn(`No router available to clean up from useFetcher()`);\n        return;\n      }\n      router.deleteFetcher(fetcherKey);\n    };\n  }, [router, fetcherKey]);\n\n  return fetcherWithComponents;\n}\n\n/**\n * Provides all fetchers currently on the page. Useful for layouts and parent\n * routes that need to provide pending/optimistic UI regarding the fetch.\n */\nexport function useFetchers(): Fetcher[] {\n  let state = useDataRouterState(DataRouterStateHook.UseFetchers);\n  return [...state.fetchers.values()];\n}\n\nconst SCROLL_RESTORATION_STORAGE_KEY = \"react-router-scroll-positions\";\nlet savedScrollPositions: Record<string, number> = {};\n\n/**\n * When rendered inside a RouterProvider, will restore scroll positions on navigations\n */\nfunction useScrollRestoration({\n  getKey,\n  storageKey,\n}: {\n  getKey?: GetScrollRestorationKeyFunction;\n  storageKey?: string;\n} = {}) {\n  let { router } = useDataRouterContext(DataRouterHook.UseScrollRestoration);\n  let { restoreScrollPosition, preventScrollReset } = useDataRouterState(\n    DataRouterStateHook.UseScrollRestoration\n  );\n  let { basename } = React.useContext(NavigationContext);\n  let location = useLocation();\n  let matches = useMatches();\n  let navigation = useNavigation();\n\n  // Trigger manual scroll restoration while we're active\n  React.useEffect(() => {\n    window.history.scrollRestoration = \"manual\";\n    return () => {\n      window.history.scrollRestoration = \"auto\";\n    };\n  }, []);\n\n  // Save positions on pagehide\n  usePageHide(\n    React.useCallback(() => {\n      if (navigation.state === \"idle\") {\n        let key = (getKey ? getKey(location, matches) : null) || location.key;\n        savedScrollPositions[key] = window.scrollY;\n      }\n      sessionStorage.setItem(\n        storageKey || SCROLL_RESTORATION_STORAGE_KEY,\n        JSON.stringify(savedScrollPositions)\n      );\n      window.history.scrollRestoration = \"auto\";\n    }, [storageKey, getKey, navigation.state, location, matches])\n  );\n\n  // Read in any saved scroll locations\n  if (typeof document !== \"undefined\") {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useLayoutEffect(() => {\n      try {\n        let sessionPositions = sessionStorage.getItem(\n          storageKey || SCROLL_RESTORATION_STORAGE_KEY\n        );\n        if (sessionPositions) {\n          savedScrollPositions = JSON.parse(sessionPositions);\n        }\n      } catch (e) {\n        // no-op, use default empty object\n      }\n    }, [storageKey]);\n\n    // Enable scroll restoration in the router\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useLayoutEffect(() => {\n      let getKeyWithoutBasename: GetScrollRestorationKeyFunction | undefined =\n        getKey && basename !== \"/\"\n          ? (location, matches) =>\n              getKey(\n                // Strip the basename to match useLocation()\n                {\n                  ...location,\n                  pathname:\n                    stripBasename(location.pathname, basename) ||\n                    location.pathname,\n                },\n                matches\n              )\n          : getKey;\n      let disableScrollRestoration = router?.enableScrollRestoration(\n        savedScrollPositions,\n        () => window.scrollY,\n        getKeyWithoutBasename\n      );\n      return () => disableScrollRestoration && disableScrollRestoration();\n    }, [router, basename, getKey]);\n\n    // Restore scrolling when state.restoreScrollPosition changes\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useLayoutEffect(() => {\n      // Explicit false means don't do anything (used for submissions)\n      if (restoreScrollPosition === false) {\n        return;\n      }\n\n      // been here before, scroll to it\n      if (typeof restoreScrollPosition === \"number\") {\n        window.scrollTo(0, restoreScrollPosition);\n        return;\n      }\n\n      // try to scroll to the hash\n      if (location.hash) {\n        let el = document.getElementById(\n          decodeURIComponent(location.hash.slice(1))\n        );\n        if (el) {\n          el.scrollIntoView();\n          return;\n        }\n      }\n\n      // Don't reset if this navigation opted out\n      if (preventScrollReset === true) {\n        return;\n      }\n\n      // otherwise go to the top on new locations\n      window.scrollTo(0, 0);\n    }, [location, restoreScrollPosition, preventScrollReset]);\n  }\n}\n\nexport { useScrollRestoration as UNSAFE_useScrollRestoration };\n\n/**\n * Setup a callback to be fired on the window's `beforeunload` event. This is\n * useful for saving some data to `window.localStorage` just before the page\n * refreshes.\n *\n * Note: The `callback` argument should be a function created with\n * `React.useCallback()`.\n */\nexport function useBeforeUnload(\n  callback: (event: BeforeUnloadEvent) => any,\n  options?: { capture?: boolean }\n): void {\n  let { capture } = options || {};\n  React.useEffect(() => {\n    let opts = capture != null ? { capture } : undefined;\n    window.addEventListener(\"beforeunload\", callback, opts);\n    return () => {\n      window.removeEventListener(\"beforeunload\", callback, opts);\n    };\n  }, [callback, capture]);\n}\n\n/**\n * Setup a callback to be fired on the window's `pagehide` event. This is\n * useful for saving some data to `window.localStorage` just before the page\n * refreshes.  This event is better supported than beforeunload across browsers.\n *\n * Note: The `callback` argument should be a function created with\n * `React.useCallback()`.\n */\nfunction usePageHide(\n  callback: (event: PageTransitionEvent) => any,\n  options?: { capture?: boolean }\n): void {\n  let { capture } = options || {};\n  React.useEffect(() => {\n    let opts = capture != null ? { capture } : undefined;\n    window.addEventListener(\"pagehide\", callback, opts);\n    return () => {\n      window.removeEventListener(\"pagehide\", callback, opts);\n    };\n  }, [callback, capture]);\n}\n\n/**\n * Wrapper around useBlocker to show a window.confirm prompt to users instead\n * of building a custom UI with useBlocker.\n *\n * Warning: This has *a lot of rough edges* and behaves very differently (and\n * very incorrectly in some cases) across browsers if user click addition\n * back/forward navigations while the confirm is open.  Use at your own risk.\n */\nfunction usePrompt({ when, message }: { when: boolean; message: string }) {\n  let blocker = useBlocker(when);\n\n  React.useEffect(() => {\n    if (blocker.state === \"blocked\") {\n      let proceed = window.confirm(message);\n      if (proceed) {\n        // This timeout is needed to avoid a weird \"race\" on POP navigations\n        // between the `window.history` revert navigation and the result of\n        // `window.confirm`\n        setTimeout(blocker.proceed, 0);\n      } else {\n        blocker.reset();\n      }\n    }\n  }, [blocker, message]);\n\n  React.useEffect(() => {\n    if (blocker.state === \"blocked\" && !when) {\n      blocker.reset();\n    }\n  }, [blocker, when]);\n}\n\nexport { usePrompt as unstable_usePrompt };\n\n//#endregion\n"]},"metadata":{},"sourceType":"module"}