{"ast":null,"code":"var _jsxFileName = \"E:\\\\Projects\\\\React Projects\\\\chat-app-firestore\\\\src\\\\components\\\\Search.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useState } from \"react\";\nimport { collection, query, where, getDocs, setDoc, doc, updateDoc, serverTimestamp, getDoc } from \"firebase/firestore\";\nimport { db } from \"../firebase\";\nimport { AuthContext } from \"../context/AuthContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Search = () => {\n  _s();\n\n  const [username, setUsername] = useState(\"\");\n  const [user, setUser] = useState(null);\n  const [err, setErr] = useState(false);\n  const [load, setLoad] = useState(true);\n  const {\n    currentUser\n  } = useContext(AuthContext);\n\n  const handleSearch = async () => {\n    setLoad(false);\n    const q = query(collection(db, \"users\"), where(\"displayName\", \"==\", username));\n\n    try {\n      const querySnapshot = await getDocs(q);\n      querySnapshot.forEach(doc => {\n        setUser(doc.data());\n      });\n      setLoad(true);\n    } catch (err) {\n      setErr(true);\n    }\n  };\n\n  const handleKey = e => {\n    handleSearch();\n  };\n\n  const handleSelect = async () => {\n    //check whether the group(chats in firestore) exists, if not create\n    const combinedId = currentUser.uid > user.uid ? currentUser.uid + user.uid : user.uid + currentUser.uid;\n\n    try {\n      const res = await getDoc(doc(db, \"chats\", combinedId));\n\n      if (!res.exists()) {\n        //create a chat in chats collection\n        await setDoc(doc(db, \"chats\", combinedId), {\n          messages: []\n        }); //create user chats\n\n        await updateDoc(doc(db, \"userChats\", currentUser.uid), {\n          [combinedId + \".userInfo\"]: {\n            uid: user.uid,\n            displayName: user.displayName,\n            photoURL: user.photoURL\n          },\n          [combinedId + \".date\"]: serverTimestamp()\n        });\n        await updateDoc(doc(db, \"userChats\", user.uid), {\n          [combinedId + \".userInfo\"]: {\n            uid: currentUser.uid,\n            displayName: currentUser.displayName,\n            photoURL: currentUser.photoURL\n          },\n          [combinedId + \".date\"]: serverTimestamp()\n        });\n      }\n    } catch (err) {\n      setErr(true);\n    }\n\n    setUser(null);\n    setUsername(\"\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"search\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"searchForm\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Find a user......\",\n        onKeyDown: handleKey,\n        onChange: e => {\n          setUsername(e.target.value);\n          handleKey;\n        },\n        value: username\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: load && /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          color: \"white\"\n        },\n        children: \"Loding... \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 19\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: err && /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          color: \"white\"\n        },\n        children: \"User not found!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 18\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), user && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"userChat\",\n      onClick: handleSelect,\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: user.photoURL,\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"userChatInfo\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: user.displayName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Search, \"nrfhiq3yyTx8O4Uz5ZK60OYJoGs=\");\n\n_c = Search;\nexport default Search;\n\nvar _c;\n\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"sources":["E:/Projects/React Projects/chat-app-firestore/src/components/Search.jsx"],"names":["React","useContext","useState","collection","query","where","getDocs","setDoc","doc","updateDoc","serverTimestamp","getDoc","db","AuthContext","Search","username","setUsername","user","setUser","err","setErr","load","setLoad","currentUser","handleSearch","q","querySnapshot","forEach","data","handleKey","e","handleSelect","combinedId","uid","res","exists","messages","displayName","photoURL","target","value","color"],"mappings":"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","sourcesContent":["import React, { useContext, useState } from \"react\";\nimport {\n  collection,\n  query,\n  where,\n  getDocs,\n  setDoc,\n  doc,\n  updateDoc,\n  serverTimestamp,\n  getDoc,\n} from \"firebase/firestore\";\nimport { db } from \"../firebase\";\nimport { AuthContext } from \"../context/AuthContext\";\nconst Search = () => {\n  const [username, setUsername] = useState(\"\");\n  const [user, setUser] = useState(null);\n  const [err, setErr] = useState(false);\n  const [load, setLoad] = useState(true);\n\n  const { currentUser } = useContext(AuthContext);\n\n  const handleSearch = async () => {\n    setLoad(false);\n    const q = query(\n      collection(db, \"users\"),\n      where(\"displayName\", \"==\", username)\n    );\n\n    try {\n      const querySnapshot = await getDocs(q);\n      querySnapshot.forEach((doc) => {\n        setUser(doc.data());\n      });\n      setLoad(true);\n    } catch (err) {\n      setErr(true);\n    }\n  };\n\n  const handleKey = (e) => {\n    handleSearch();\n  };\n\n  const handleSelect = async () => {\n    //check whether the group(chats in firestore) exists, if not create\n    const combinedId =\n      currentUser.uid > user.uid\n        ? currentUser.uid + user.uid\n        : user.uid + currentUser.uid;\n    try {\n      const res = await getDoc(doc(db, \"chats\", combinedId));\n\n      if (!res.exists()) {\n        //create a chat in chats collection\n        await setDoc(doc(db, \"chats\", combinedId), { messages: [] });\n\n        //create user chats\n        await updateDoc(doc(db, \"userChats\", currentUser.uid), {\n          [combinedId + \".userInfo\"]: {\n            uid: user.uid,\n            displayName: user.displayName,\n            photoURL: user.photoURL,\n          },\n          [combinedId + \".date\"]: serverTimestamp(),\n        });\n\n        await updateDoc(doc(db, \"userChats\", user.uid), {\n          [combinedId + \".userInfo\"]: {\n            uid: currentUser.uid,\n            displayName: currentUser.displayName,\n            photoURL: currentUser.photoURL,\n          },\n          [combinedId + \".date\"]: serverTimestamp(),\n        });\n      }\n    } catch (err) {\n      setErr(true);\n    }\n\n    setUser(null);\n    setUsername(\"\");\n  };\n  return (\n    <div className=\"search\">\n      <div className=\"searchForm\">\n        <input\n          type=\"text\"\n          placeholder=\"Find a user......\"\n          onKeyDown={handleKey}\n          onChange={(e) => {\n            setUsername(e.target.value);\n            handleKey;\n          }}\n          value={username}\n        />\n      </div>\n      <p>{load && <span style={{ color: \"white\" }}>Loding... </span>}</p>\n      <p>{err && <span style={{ color: \"white\" }}>User not found!</span>}</p>\n      {user && (\n        <div className=\"userChat\" onClick={handleSelect}>\n          <img src={user.photoURL} alt=\"\" />\n          <div className=\"userChatInfo\">\n            <span>{user.displayName}</span>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Search;\n"]},"metadata":{},"sourceType":"module"}