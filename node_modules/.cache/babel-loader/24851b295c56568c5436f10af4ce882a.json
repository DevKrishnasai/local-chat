{"ast":null,"code":"var _jsxFileName = \"E:\\\\Projects\\\\React Projects\\\\local-chat\\\\src\\\\context\\\\ChatContext.js\",\n    _s = $RefreshSig$();\n\nimport { createContext, useContext, useReducer } from \"react\";\nimport { AuthContext } from \"./AuthContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ChatContext = /*#__PURE__*/createContext();\nexport const ChatContextProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const {\n    currentUser\n  } = useContext(AuthContext);\n  const INITIAL_STATE = {\n    chatId: \"null\",\n    user: {}\n  };\n\n  const chatReducer = (state, action) => {\n    switch (action.type) {\n      case \"CHANGE_USER\":\n        return {\n          user: action.payload,\n          chatId: currentUser.uid > action.payload.uid ? currentUser.uid + action.payload.uid : action.payload.uid + currentUser.uid\n        };\n\n      default:\n        return state;\n    }\n  };\n\n  const [state, dispatch] = useReducer(chatReducer, INITIAL_STATE);\n  return /*#__PURE__*/_jsxDEV(ChatContext.Provider, {\n    value: {\n      data: state,\n      dispatch\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ChatContextProvider, \"j7iuR1KHMw0ikD9YRG3aml+uPp8=\");\n\n_c = ChatContextProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChatContextProvider\");","map":{"version":3,"sources":["E:/Projects/React Projects/local-chat/src/context/ChatContext.js"],"names":["createContext","useContext","useReducer","AuthContext","ChatContext","ChatContextProvider","children","currentUser","INITIAL_STATE","chatId","user","chatReducer","state","action","type","payload","uid","dispatch","data"],"mappings":";;;AAAA,SACEA,aADF,EAEEC,UAFF,EAGEC,UAHF,QAIO,OAJP;AAKA,SAASC,WAAT,QAA4B,eAA5B;;AAEA,OAAO,MAAMC,WAAW,gBAAGJ,aAAa,EAAjC;AAEP,OAAO,MAAMK,mBAAmB,GAAG,QAAkB;AAAA;;AAAA,MAAjB;AAAEC,IAAAA;AAAF,GAAiB;AACnD,QAAM;AAAEC,IAAAA;AAAF,MAAkBN,UAAU,CAACE,WAAD,CAAlC;AACA,QAAMK,aAAa,GAAG;AACpBC,IAAAA,MAAM,EAAE,MADY;AAEpBC,IAAAA,IAAI,EAAE;AAFc,GAAtB;;AAKA,QAAMC,WAAW,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACrC,YAAQA,MAAM,CAACC,IAAf;AACE,WAAK,aAAL;AACE,eAAO;AACLJ,UAAAA,IAAI,EAAEG,MAAM,CAACE,OADR;AAELN,UAAAA,MAAM,EACJF,WAAW,CAACS,GAAZ,GAAkBH,MAAM,CAACE,OAAP,CAAeC,GAAjC,GACIT,WAAW,CAACS,GAAZ,GAAkBH,MAAM,CAACE,OAAP,CAAeC,GADrC,GAEIH,MAAM,CAACE,OAAP,CAAeC,GAAf,GAAqBT,WAAW,CAACS;AALlC,SAAP;;AAQF;AACE,eAAOJ,KAAP;AAXJ;AAaD,GAdD;;AAgBA,QAAM,CAACA,KAAD,EAAQK,QAAR,IAAoBf,UAAU,CAACS,WAAD,EAAcH,aAAd,CAApC;AAEA,sBACE,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAE;AAAEU,MAAAA,IAAI,EAACN,KAAP;AAAcK,MAAAA;AAAd,KAA7B;AAAA,cACGX;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CA9BM;;GAAMD,mB;;KAAAA,mB","sourcesContent":["import {\r\n  createContext,\r\n  useContext,\r\n  useReducer,\r\n} from \"react\";\r\nimport { AuthContext } from \"./AuthContext\";\r\n\r\nexport const ChatContext = createContext();\r\n\r\nexport const ChatContextProvider = ({ children }) => {\r\n  const { currentUser } = useContext(AuthContext);\r\n  const INITIAL_STATE = {\r\n    chatId: \"null\",\r\n    user: {},\r\n  };\r\n\r\n  const chatReducer = (state, action) => {\r\n    switch (action.type) {\r\n      case \"CHANGE_USER\":\r\n        return {\r\n          user: action.payload,\r\n          chatId:\r\n            currentUser.uid > action.payload.uid\r\n              ? currentUser.uid + action.payload.uid\r\n              : action.payload.uid + currentUser.uid,\r\n        };\r\n\r\n      default:\r\n        return state;\r\n    }\r\n  };\r\n\r\n  const [state, dispatch] = useReducer(chatReducer, INITIAL_STATE);\r\n\r\n  return (\r\n    <ChatContext.Provider value={{ data:state, dispatch }}>\r\n      {children}\r\n    </ChatContext.Provider>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}