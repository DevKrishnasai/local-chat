{"ast":null,"code":"import _slicedToArray from\"E:/Projects/React Projects/chat-app-firestore/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{createContext,useEffect,useState}from\"react\";import{auth}from\"../firebase\";import{onAuthStateChanged}from\"firebase/auth\";import{jsx as _jsx}from\"react/jsx-runtime\";export var AuthContext=/*#__PURE__*/createContext();export var AuthContextProvider=function AuthContextProvider(_ref){var children=_ref.children;var _useState=useState({}),_useState2=_slicedToArray(_useState,2),currentUser=_useState2[0],setCurrentUser=_useState2[1];useEffect(function(){var unsub=onAuthStateChanged(auth,function(user){setCurrentUser(user);});return function(){unsub();};},[]);return/*#__PURE__*/_jsx(AuthContext.Provider,{value:{currentUser:currentUser},children:children});};","map":{"version":3,"sources":["E:/Projects/React Projects/chat-app-firestore/src/context/AuthContext.js"],"names":["createContext","useEffect","useState","auth","onAuthStateChanged","AuthContext","AuthContextProvider","children","currentUser","setCurrentUser","unsub","user"],"mappings":"mIAAA,OAASA,aAAT,CAAwBC,SAAxB,CAAmCC,QAAnC,KAAmD,OAAnD,CACA,OAASC,IAAT,KAAqB,aAArB,CACA,OAASC,kBAAT,KAAmC,eAAnC,C,2CAEA,MAAO,IAAMC,CAAAA,WAAW,cAAGL,aAAa,EAAjC,CAEP,MAAO,IAAMM,CAAAA,mBAAmB,CAAG,QAAtBA,CAAAA,mBAAsB,MAAkB,IAAfC,CAAAA,QAAe,MAAfA,QAAe,CACnD,cAAsCL,QAAQ,CAAC,EAAD,CAA9C,wCAAOM,WAAP,eAAoBC,cAApB,eAEAR,SAAS,CAAC,UAAM,CACd,GAAMS,CAAAA,KAAK,CAAGN,kBAAkB,CAACD,IAAD,CAAO,SAACQ,IAAD,CAAU,CAC/CF,cAAc,CAACE,IAAD,CAAd,CACD,CAF+B,CAAhC,CAIA,MAAO,WAAM,CACXD,KAAK,GACN,CAFD,CAGD,CARQ,CAQN,EARM,CAAT,CAUA,mBACE,KAAC,WAAD,CAAa,QAAb,EAAsB,KAAK,CAAE,CAAEF,WAAW,CAAXA,WAAF,CAA7B,UACGD,QADH,EADF,CAKD,CAlBM","sourcesContent":["import { createContext, useEffect, useState } from \"react\";\nimport { auth } from \"../firebase\";\nimport { onAuthStateChanged } from \"firebase/auth\";\n\nexport const AuthContext = createContext();\n\nexport const AuthContextProvider = ({ children }) => {\n  const [currentUser, setCurrentUser] = useState({});\n\n  useEffect(() => {\n    const unsub = onAuthStateChanged(auth, (user) => {\n      setCurrentUser(user);\n    });\n\n    return () => {\n      unsub();\n    };\n  }, []);\n\n  return (\n    <AuthContext.Provider value={{ currentUser }}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}